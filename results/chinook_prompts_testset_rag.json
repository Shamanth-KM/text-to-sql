[
    {
        "question": "Which artists have more than 10 albums?",
        "query": "SELECT ArtistId FROM Album GROUP BY ArtistId HAVING COUNT(AlbumId) > 10;",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 41 - Question: Which artist has the most albums? SQL: SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.Name ORDER BY COUNT(Album.AlbumId) DESC LIMIT 1;\nExample 23 - Question: List all albums with more than 10 tracks. SQL: SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.Title HAVING COUNT(Track.TrackId) > 10;\nExample 25 - Question: Show the artist names who have more than 5 albums. SQL: SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.Name HAVING COUNT(Album.AlbumId) > 5;\nExample 30 - Question: List the number of tracks per album. SQL: SELECT AlbumId, COUNT(*) as TrackCount FROM Track GROUP BY AlbumId;\n\n### Question:\nWhich artists have more than 10 albums?\n\n### SQL:"
    },
    {
        "question": "List the first and last names of customers who live in Brazil.",
        "query": "SELECT FirstName, LastName FROM Customer WHERE Country = 'Brazil';",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 2 - Question: Which customers are from Brazil? SQL: SELECT FirstName, LastName FROM Customer WHERE Country = 'Brazil';\nExample 15 - Question: Which customers live in cities that start with 'P'? SQL: SELECT FirstName, LastName, City FROM Customer WHERE City LIKE 'P%';\nExample 47 - Question: Find customers who live in both Paris and Berlin. SQL: SELECT FirstName, LastName, City FROM Customer WHERE City IN ('Paris', 'Berlin');\nExample 46 - Question: How many customers are from each country? SQL: SELECT Country, COUNT(*) FROM Customer GROUP BY Country;\n\n### Question:\nList the first and last names of customers who live in Brazil.\n\n### SQL:"
    },
    {
        "question": "Show all tracks that are longer than 5 minutes.",
        "query": "SELECT Name FROM Track WHERE Milliseconds > 300000;",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 19 - Question: Which tracks are longer than 5 minutes? SQL: SELECT Name FROM Track WHERE Milliseconds > 300000;\nExample 35 - Question: What is the total duration of all tracks in seconds? SQL: SELECT SUM(Milliseconds) / 1000 as TotalSeconds FROM Track;\nExample 33 - Question: What is the longest track in the database? SQL: SELECT Name FROM Track ORDER BY Milliseconds DESC LIMIT 1;\nExample 3 - Question: List the top 5 most purchased tracks. SQL: SELECT Track.Name, COUNT(*) as Purchases FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Track.Name ORDER BY Purchases DESC LIMIT 5;\n\n### Question:\nShow all tracks that are longer than 5 minutes.\n\n### SQL:"
    },
    {
        "question": "Which employees are sales managers?",
        "query": "SELECT FirstName, LastName FROM Employee WHERE Title = 'Sales Manager';",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 5 - Question: Which employees are sales agents? SQL: SELECT FirstName, LastName FROM Employee WHERE Title = 'Sales Support Agent';\nExample 48 - Question: Which employees report to a manager named 'Steve'? SQL: SELECT e.FirstName, e.LastName FROM Employee e JOIN Employee m ON e.ReportsTo = m.EmployeeId WHERE m.FirstName = 'Steve';\nExample 26 - Question: How many employees do we have per city? SQL: SELECT City, COUNT(*) as EmployeeCount FROM Employee GROUP BY City;\nExample 13 - Question: List employees who are managers. SQL: SELECT FirstName, LastName FROM Employee WHERE Title LIKE '%Manager%';\n\n### Question:\nWhich employees are sales managers?\n\n### SQL:"
    },
    {
        "question": "Get the email addresses of customers in the city of Paris.",
        "query": "SELECT Email FROM Customer WHERE City = 'Paris';",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 21 - Question: List the email addresses of customers who live in Paris. SQL: SELECT Email FROM Customer WHERE City = 'Paris';\nExample 27 - Question: Which customers are from Germany and have a Gmail email address? SQL: SELECT FirstName, LastName FROM Customer WHERE Country = 'Germany' AND Email LIKE '%@gmail.com';\nExample 47 - Question: Find customers who live in both Paris and Berlin. SQL: SELECT FirstName, LastName, City FROM Customer WHERE City IN ('Paris', 'Berlin');\nExample 8 - Question: Find the names and emails of customers who have made purchases over $20. SQL: SELECT DISTINCT Customer.FirstName, Customer.LastName, Customer.Email FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId WHERE Invoice.Total > 20;\n\n### Question:\nGet the email addresses of customers in the city of Paris.\n\n### SQL:"
    },
    {
        "question": "Find the total amount spent by each customer.",
        "query": "SELECT CustomerId, SUM(Total) FROM Invoice GROUP BY CustomerId;",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 8 - Question: Find the names and emails of customers who have made purchases over $20. SQL: SELECT DISTINCT Customer.FirstName, Customer.LastName, Customer.Email FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId WHERE Invoice.Total > 20;\nExample 16 - Question: What is the total sales value for each billing city? SQL: SELECT BillingCity, SUM(Total) FROM Invoice GROUP BY BillingCity;\nExample 12 - Question: Show the number of invoices per customer. SQL: SELECT CustomerId, COUNT(*) as InvoiceCount FROM Invoice GROUP BY CustomerId;\nExample 6 - Question: Show the total sales per country. SQL: SELECT BillingCountry, SUM(Total) as TotalSales FROM Invoice GROUP BY BillingCountry ORDER BY TotalSales DESC;\n\n### Question:\nFind the total amount spent by each customer.\n\n### SQL:"
    },
    {
        "question": "List the top 5 most expensive tracks.",
        "query": "SELECT Name FROM Track ORDER BY UnitPrice DESC LIMIT 5;",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 42 - Question: Find the most expensive track. SQL: SELECT Name, UnitPrice FROM Track ORDER BY UnitPrice DESC LIMIT 1;\nExample 3 - Question: List the top 5 most purchased tracks. SQL: SELECT Track.Name, COUNT(*) as Purchases FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Track.Name ORDER BY Purchases DESC LIMIT 5;\nExample 29 - Question: Find tracks that cost more than $0.99. SQL: SELECT Name, UnitPrice FROM Track WHERE UnitPrice > 0.99;\nExample 23 - Question: List all albums with more than 10 tracks. SQL: SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.Title HAVING COUNT(Track.TrackId) > 10;\n\n### Question:\nList the top 5 most expensive tracks.\n\n### SQL:"
    },
    {
        "question": "Which tracks belong to the 'Rock' genre?",
        "query": "SELECT Name FROM Track WHERE GenreId = (SELECT GenreId FROM Genre WHERE Name = 'Rock');",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 28 - Question: What are the names of all tracks in the 'Rock' genre? SQL: SELECT Track.Name FROM Track JOIN Genre ON Track.GenreId = Genre.GenreId WHERE Genre.Name = 'Rock';\nCREATE TABLE [Track]\n(\n    [TrackId] INTEGER  NOT NULL,\n    [Name] NVARCHAR(200)  NOT NULL,\n    [AlbumId] INTEGER,\n    [MediaTypeId] INTEGER  NOT NULL,\n    [GenreId] INTEGER,\n    [Composer] NVARCHAR(220),\n    [Milliseconds] INTEGER  NOT NULL,\n    [Bytes] INTEGER,\n    [UnitPrice] NUMERIC(10,2)  NOT NULL,\n    CONSTRAINT [PK_Track] PRIMARY KEY  ([TrackId]),\n    FOREIGN KEY ([AlbumId]) REFERENCES [Album] ([AlbumId]) \n\t\tON DELETE NO ACTION ON UPDATE NO ACTION,\n    FOREIGN KEY ([GenreId]) REFERENCES [Genre] ([GenreId]) \n\t\tON DELETE NO ACTION ON UPDATE NO ACTION,\n    FOREIGN KEY ([MediaTypeId]) REFERENCES [MediaType] ([MediaTypeId]) \n\t\tON DELETE NO ACTION ON UPDATE NO ACTION\n)\nExample 38 - Question: Which tracks belong to playlists named 'Grunge'? SQL: SELECT Track.Name FROM Track JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId JOIN Playlist ON PlaylistTrack.PlaylistId = Playlist.PlaylistId WHERE Playlist.Name = 'Grunge';\nExample 49 - Question: Which customers have purchased tracks in the 'Jazz' genre? SQL: SELECT DISTINCT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId WHERE Genre.Name = 'Jazz';\n\n### Question:\nWhich tracks belong to the 'Rock' genre?\n\n### SQL:"
    },
    {
        "question": "Count the number of invoices for each country.",
        "query": "SELECT BillingCountry, COUNT(*) FROM Invoice GROUP BY BillingCountry;",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 6 - Question: Show the total sales per country. SQL: SELECT BillingCountry, SUM(Total) as TotalSales FROM Invoice GROUP BY BillingCountry ORDER BY TotalSales DESC;\nExample 17 - Question: Find the most common billing country. SQL: SELECT BillingCountry, COUNT(*) as InvoiceCount FROM Invoice GROUP BY BillingCountry ORDER BY InvoiceCount DESC LIMIT 1;\nExample 12 - Question: Show the number of invoices per customer. SQL: SELECT CustomerId, COUNT(*) as InvoiceCount FROM Invoice GROUP BY CustomerId;\nExample 37 - Question: List the customers who have made more than 3 invoices. SQL: SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId HAVING COUNT(Invoice.InvoiceId) > 3;\n\n### Question:\nCount the number of invoices for each country.\n\n### SQL:"
    },
    {
        "question": "Find the name of the artist who released the album 'Californication'.",
        "query": "SELECT Name FROM Artist WHERE ArtistId = (SELECT ArtistId FROM Album WHERE Title = 'Californication');",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 41 - Question: Which artist has the most albums? SQL: SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.Name ORDER BY COUNT(Album.AlbumId) DESC LIMIT 1;\nExample 25 - Question: Show the artist names who have more than 5 albums. SQL: SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.Name HAVING COUNT(Album.AlbumId) > 5;\nExample 1 - Question: What are the names of all albums by AC/DC? SQL: SELECT Title FROM Album JOIN Artist ON Album.ArtistId = Artist.ArtistId WHERE Artist.Name = 'AC/DC';\nExample 38 - Question: Which tracks belong to playlists named 'Grunge'? SQL: SELECT Track.Name FROM Track JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId JOIN Playlist ON PlaylistTrack.PlaylistId = Playlist.PlaylistId WHERE Playlist.Name = 'Grunge';\n\n### Question:\nFind the name of the artist who released the album 'Californication'.\n\n### SQL:"
    },
    {
        "question": "List all customers who have never made a purchase.",
        "query": "SELECT CustomerId FROM Customer WHERE CustomerId NOT IN (SELECT CustomerId FROM Invoice);",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 18 - Question: Show the customers who have not made any purchases. SQL: SELECT FirstName, LastName FROM Customer WHERE CustomerId NOT IN (SELECT CustomerId FROM Invoice);\nExample 34 - Question: List all employees who do not report to anyone. SQL: SELECT FirstName, LastName FROM Employee WHERE ReportsTo IS NULL;\nExample 8 - Question: Find the names and emails of customers who have made purchases over $20. SQL: SELECT DISTINCT Customer.FirstName, Customer.LastName, Customer.Email FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId WHERE Invoice.Total > 20;\nExample 37 - Question: List the customers who have made more than 3 invoices. SQL: SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId HAVING COUNT(Invoice.InvoiceId) > 3;\n\n### Question:\nList all customers who have never made a purchase.\n\n### SQL:"
    },
    {
        "question": "How many different genres are there?",
        "query": "SELECT COUNT(*) FROM Genre;",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 7 - Question: List all unique genres in the database. SQL: SELECT DISTINCT Name FROM Genre;\nExample 36 - Question: How many genres have more than 50 tracks? SQL: SELECT COUNT(*) FROM (SELECT GenreId FROM Track GROUP BY GenreId HAVING COUNT(*) > 50);\nCREATE TABLE [Genre]\n(\n    [GenreId] INTEGER  NOT NULL,\n    [Name] NVARCHAR(120),\n    CONSTRAINT [PK_Genre] PRIMARY KEY  ([GenreId])\n)\nExample 28 - Question: What are the names of all tracks in the 'Rock' genre? SQL: SELECT Track.Name FROM Track JOIN Genre ON Track.GenreId = Genre.GenreId WHERE Genre.Name = 'Rock';\n\n### Question:\nHow many different genres are there?\n\n### SQL:"
    },
    {
        "question": "Find the average invoice total.",
        "query": "SELECT AVG(Total) FROM Invoice;",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 32 - Question: Get the average invoice total. SQL: SELECT AVG(Total) FROM Invoice;\nExample 16 - Question: What is the total sales value for each billing city? SQL: SELECT BillingCity, SUM(Total) FROM Invoice GROUP BY BillingCity;\nExample 43 - Question: What is the average price of a track? SQL: SELECT AVG(UnitPrice) FROM Track;\nExample 6 - Question: Show the total sales per country. SQL: SELECT BillingCountry, SUM(Total) as TotalSales FROM Invoice GROUP BY BillingCountry ORDER BY TotalSales DESC;\n\n### Question:\nFind the average invoice total.\n\n### SQL:"
    },
    {
        "question": "List employees who report to Steve Johnson.",
        "query": "SELECT FirstName, LastName FROM Employee WHERE ReportsTo = (SELECT EmployeeId FROM Employee WHERE FirstName = 'Steve' AND LastName = 'Johnson');",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 34 - Question: List all employees who do not report to anyone. SQL: SELECT FirstName, LastName FROM Employee WHERE ReportsTo IS NULL;\nExample 48 - Question: Which employees report to a manager named 'Steve'? SQL: SELECT e.FirstName, e.LastName FROM Employee e JOIN Employee m ON e.ReportsTo = m.EmployeeId WHERE m.FirstName = 'Steve';\nExample 9 - Question: Which employee reports to Andrew Adams? SQL: SELECT FirstName, LastName FROM Employee WHERE ReportsTo = (SELECT EmployeeId FROM Employee WHERE FirstName = 'Andrew' AND LastName = 'Adams');\nExample 5 - Question: Which employees are sales agents? SQL: SELECT FirstName, LastName FROM Employee WHERE Title = 'Sales Support Agent';\n\n### Question:\nList employees who report to Steve Johnson.\n\n### SQL:"
    },
    {
        "question": "Which tracks were composed by 'AC/DC'?",
        "query": "SELECT Name FROM Track WHERE Composer = 'AC/DC';",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 31 - Question: Show the customers who bought tracks composed by 'AC/DC'. SQL: SELECT DISTINCT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Artist ON Album.ArtistId = Artist.ArtistId WHERE Artist.Name = 'AC/DC';\nExample 1 - Question: What are the names of all albums by AC/DC? SQL: SELECT Title FROM Album JOIN Artist ON Album.ArtistId = Artist.ArtistId WHERE Artist.Name = 'AC/DC';\nExample 30 - Question: List the number of tracks per album. SQL: SELECT AlbumId, COUNT(*) as TrackCount FROM Track GROUP BY AlbumId;\nExample 38 - Question: Which tracks belong to playlists named 'Grunge'? SQL: SELECT Track.Name FROM Track JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId JOIN Playlist ON PlaylistTrack.PlaylistId = Playlist.PlaylistId WHERE Playlist.Name = 'Grunge';\n\n### Question:\nWhich tracks were composed by 'AC/DC'?\n\n### SQL:"
    },
    {
        "question": "Get the number of playlists available.",
        "query": "SELECT COUNT(*) FROM Playlist;",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 40 - Question: List all playlists and the number of tracks in each. SQL: SELECT Playlist.Name, COUNT(PlaylistTrack.TrackId) as TrackCount FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.Name;\nExample 38 - Question: Which tracks belong to playlists named 'Grunge'? SQL: SELECT Track.Name FROM Track JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId JOIN Playlist ON PlaylistTrack.PlaylistId = Playlist.PlaylistId WHERE Playlist.Name = 'Grunge';\nExample 30 - Question: List the number of tracks per album. SQL: SELECT AlbumId, COUNT(*) as TrackCount FROM Track GROUP BY AlbumId;\nCREATE TABLE [Playlist]\n(\n    [PlaylistId] INTEGER  NOT NULL,\n    [Name] NVARCHAR(120),\n    CONSTRAINT [PK_Playlist] PRIMARY KEY  ([PlaylistId])\n)\n\n### Question:\nGet the number of playlists available.\n\n### SQL:"
    },
    {
        "question": "Which customers are from the USA and spent more than $30 total?",
        "query": "SELECT CustomerId FROM Customer WHERE Country = 'USA' AND CustomerId IN (SELECT CustomerId FROM Invoice GROUP BY CustomerId HAVING SUM(Total) > 30);",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 8 - Question: Find the names and emails of customers who have made purchases over $20. SQL: SELECT DISTINCT Customer.FirstName, Customer.LastName, Customer.Email FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId WHERE Invoice.Total > 20;\nExample 46 - Question: How many customers are from each country? SQL: SELECT Country, COUNT(*) FROM Customer GROUP BY Country;\nExample 50 - Question: Find the country with the highest number of customers. SQL: SELECT Country FROM Customer GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1;\nExample 17 - Question: Find the most common billing country. SQL: SELECT BillingCountry, COUNT(*) as InvoiceCount FROM Invoice GROUP BY BillingCountry ORDER BY InvoiceCount DESC LIMIT 1;\n\n### Question:\nWhich customers are from the USA and spent more than $30 total?\n\n### SQL:"
    },
    {
        "question": "Show track names and their respective album titles.",
        "query": "SELECT t.Name, a.Title FROM Track t JOIN Album a ON t.AlbumId = a.AlbumId;",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 23 - Question: List all albums with more than 10 tracks. SQL: SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.Title HAVING COUNT(Track.TrackId) > 10;\nExample 30 - Question: List the number of tracks per album. SQL: SELECT AlbumId, COUNT(*) as TrackCount FROM Track GROUP BY AlbumId;\nExample 31 - Question: Show the customers who bought tracks composed by 'AC/DC'. SQL: SELECT DISTINCT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Artist ON Album.ArtistId = Artist.ArtistId WHERE Artist.Name = 'AC/DC';\nExample 45 - Question: Show all tracks that include 'love' in the name. SQL: SELECT Name FROM Track WHERE Name LIKE '%love%';\n\n### Question:\nShow track names and their respective album titles.\n\n### SQL:"
    },
    {
        "question": "Find the most recently hired employee.",
        "query": "SELECT FirstName, LastName FROM Employee ORDER BY HireDate DESC LIMIT 1;",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 11 - Question: Which customer made the highest invoice total? SQL: SELECT Customer.FirstName, Customer.LastName, MAX(Invoice.Total) FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId;\nExample 13 - Question: List employees who are managers. SQL: SELECT FirstName, LastName FROM Employee WHERE Title LIKE '%Manager%';\nExample 5 - Question: Which employees are sales agents? SQL: SELECT FirstName, LastName FROM Employee WHERE Title = 'Sales Support Agent';\nExample 9 - Question: Which employee reports to Andrew Adams? SQL: SELECT FirstName, LastName FROM Employee WHERE ReportsTo = (SELECT EmployeeId FROM Employee WHERE FirstName = 'Andrew' AND LastName = 'Adams');\n\n### Question:\nFind the most recently hired employee.\n\n### SQL:"
    },
    {
        "question": "List invoices with a total greater than the average invoice total.",
        "query": "SELECT InvoiceId, Total FROM Invoice WHERE Total > (SELECT AVG(Total) FROM Invoice);",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 32 - Question: Get the average invoice total. SQL: SELECT AVG(Total) FROM Invoice;\nExample 11 - Question: Which customer made the highest invoice total? SQL: SELECT Customer.FirstName, Customer.LastName, MAX(Invoice.Total) FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId;\nExample 37 - Question: List the customers who have made more than 3 invoices. SQL: SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId HAVING COUNT(Invoice.InvoiceId) > 3;\nExample 20 - Question: How many invoices have a total between $10 and $15? SQL: SELECT COUNT(*) FROM Invoice WHERE Total BETWEEN 10 AND 15;\n\n### Question:\nList invoices with a total greater than the average invoice total.\n\n### SQL:"
    },
    {
        "question": "Which tracks have the word 'Love' in their title?",
        "query": "SELECT Name FROM Track WHERE Name LIKE '%Love%';",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 45 - Question: Show all tracks that include 'love' in the name. SQL: SELECT Name FROM Track WHERE Name LIKE '%love%';\nExample 38 - Question: Which tracks belong to playlists named 'Grunge'? SQL: SELECT Track.Name FROM Track JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId JOIN Playlist ON PlaylistTrack.PlaylistId = Playlist.PlaylistId WHERE Playlist.Name = 'Grunge';\nExample 49 - Question: Which customers have purchased tracks in the 'Jazz' genre? SQL: SELECT DISTINCT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId WHERE Genre.Name = 'Jazz';\nExample 23 - Question: List all albums with more than 10 tracks. SQL: SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.Title HAVING COUNT(Track.TrackId) > 10;\n\n### Question:\nWhich tracks have the word 'Love' in their title?\n\n### SQL:"
    },
    {
        "question": "Find customers who have purchased tracks by 'Queen'.",
        "query": "SELECT DISTINCT c.CustomerId FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId WHERE t.Composer = 'Queen';",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 49 - Question: Which customers have purchased tracks in the 'Jazz' genre? SQL: SELECT DISTINCT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId WHERE Genre.Name = 'Jazz';\nExample 31 - Question: Show the customers who bought tracks composed by 'AC/DC'. SQL: SELECT DISTINCT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Artist ON Album.ArtistId = Artist.ArtistId WHERE Artist.Name = 'AC/DC';\nExample 3 - Question: List the top 5 most purchased tracks. SQL: SELECT Track.Name, COUNT(*) as Purchases FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Track.Name ORDER BY Purchases DESC LIMIT 5;\nExample 8 - Question: Find the names and emails of customers who have made purchases over $20. SQL: SELECT DISTINCT Customer.FirstName, Customer.LastName, Customer.Email FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId WHERE Invoice.Total > 20;\n\n### Question:\nFind customers who have purchased tracks by 'Queen'.\n\n### SQL:"
    },
    {
        "question": "List all media types available.",
        "query": "SELECT Name FROM MediaType;",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nCREATE TABLE [MediaType]\n(\n    [MediaTypeId] INTEGER  NOT NULL,\n    [Name] NVARCHAR(120),\n    CONSTRAINT [PK_MediaType] PRIMARY KEY  ([MediaTypeId])\n)\nCREATE TABLE [Track]\n(\n    [TrackId] INTEGER  NOT NULL,\n    [Name] NVARCHAR(200)  NOT NULL,\n    [AlbumId] INTEGER,\n    [MediaTypeId] INTEGER  NOT NULL,\n    [GenreId] INTEGER,\n    [Composer] NVARCHAR(220),\n    [Milliseconds] INTEGER  NOT NULL,\n    [Bytes] INTEGER,\n    [UnitPrice] NUMERIC(10,2)  NOT NULL,\n    CONSTRAINT [PK_Track] PRIMARY KEY  ([TrackId]),\n    FOREIGN KEY ([AlbumId]) REFERENCES [Album] ([AlbumId]) \n\t\tON DELETE NO ACTION ON UPDATE NO ACTION,\n    FOREIGN KEY ([GenreId]) REFERENCES [Genre] ([GenreId]) \n\t\tON DELETE NO ACTION ON UPDATE NO ACTION,\n    FOREIGN KEY ([MediaTypeId]) REFERENCES [MediaType] ([MediaTypeId]) \n\t\tON DELETE NO ACTION ON UPDATE NO ACTION\n)\nCREATE TABLE [Playlist]\n(\n    [PlaylistId] INTEGER  NOT NULL,\n    [Name] NVARCHAR(120),\n    CONSTRAINT [PK_Playlist] PRIMARY KEY  ([PlaylistId])\n)\nExample 7 - Question: List all unique genres in the database. SQL: SELECT DISTINCT Name FROM Genre;\n\n### Question:\nList all media types available.\n\n### SQL:"
    },
    {
        "question": "Which city has the most customers?",
        "query": "SELECT City FROM Customer GROUP BY City ORDER BY COUNT(*) DESC LIMIT 1;",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 10 - Question: How many different cities are our customers from? SQL: SELECT COUNT(DISTINCT City) FROM Customer;\nExample 15 - Question: Which customers live in cities that start with 'P'? SQL: SELECT FirstName, LastName, City FROM Customer WHERE City LIKE 'P%';\nExample 50 - Question: Find the country with the highest number of customers. SQL: SELECT Country FROM Customer GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1;\nExample 47 - Question: Find customers who live in both Paris and Berlin. SQL: SELECT FirstName, LastName, City FROM Customer WHERE City IN ('Paris', 'Berlin');\n\n### Question:\nWhich city has the most customers?\n\n### SQL:"
    },
    {
        "question": "Find all employees who are not managers.",
        "query": "SELECT FirstName, LastName FROM Employee WHERE ReportsTo IS NOT NULL;",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 34 - Question: List all employees who do not report to anyone. SQL: SELECT FirstName, LastName FROM Employee WHERE ReportsTo IS NULL;\nExample 13 - Question: List employees who are managers. SQL: SELECT FirstName, LastName FROM Employee WHERE Title LIKE '%Manager%';\nExample 48 - Question: Which employees report to a manager named 'Steve'? SQL: SELECT e.FirstName, e.LastName FROM Employee e JOIN Employee m ON e.ReportsTo = m.EmployeeId WHERE m.FirstName = 'Steve';\nExample 26 - Question: How many employees do we have per city? SQL: SELECT City, COUNT(*) as EmployeeCount FROM Employee GROUP BY City;\n\n### Question:\nFind all employees who are not managers.\n\n### SQL:"
    },
    {
        "question": "Get the total duration in minutes of all tracks.",
        "query": "SELECT SUM(Milliseconds)/60000.0 FROM Track;",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 35 - Question: What is the total duration of all tracks in seconds? SQL: SELECT SUM(Milliseconds) / 1000 as TotalSeconds FROM Track;\nExample 19 - Question: Which tracks are longer than 5 minutes? SQL: SELECT Name FROM Track WHERE Milliseconds > 300000;\nExample 33 - Question: What is the longest track in the database? SQL: SELECT Name FROM Track ORDER BY Milliseconds DESC LIMIT 1;\nExample 40 - Question: List all playlists and the number of tracks in each. SQL: SELECT Playlist.Name, COUNT(PlaylistTrack.TrackId) as TrackCount FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.Name;\n\n### Question:\nGet the total duration in minutes of all tracks.\n\n### SQL:"
    },
    {
        "question": "How many tracks are in the 'Rock' playlist?",
        "query": "SELECT COUNT(*) FROM PlaylistTrack WHERE PlaylistId = (SELECT PlaylistId FROM Playlist WHERE Name = 'Rock');",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 40 - Question: List all playlists and the number of tracks in each. SQL: SELECT Playlist.Name, COUNT(PlaylistTrack.TrackId) as TrackCount FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.Name;\nExample 23 - Question: List all albums with more than 10 tracks. SQL: SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.Title HAVING COUNT(Track.TrackId) > 10;\nExample 30 - Question: List the number of tracks per album. SQL: SELECT AlbumId, COUNT(*) as TrackCount FROM Track GROUP BY AlbumId;\nExample 38 - Question: Which tracks belong to playlists named 'Grunge'? SQL: SELECT Track.Name FROM Track JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId JOIN Playlist ON PlaylistTrack.PlaylistId = Playlist.PlaylistId WHERE Playlist.Name = 'Grunge';\n\n### Question:\nHow many tracks are in the 'Rock' playlist?\n\n### SQL:"
    },
    {
        "question": "Which customers have more than 2 invoices?",
        "query": "SELECT CustomerId FROM Invoice GROUP BY CustomerId HAVING COUNT(*) > 2;",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 37 - Question: List the customers who have made more than 3 invoices. SQL: SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId HAVING COUNT(Invoice.InvoiceId) > 3;\nExample 12 - Question: Show the number of invoices per customer. SQL: SELECT CustomerId, COUNT(*) as InvoiceCount FROM Invoice GROUP BY CustomerId;\nExample 11 - Question: Which customer made the highest invoice total? SQL: SELECT Customer.FirstName, Customer.LastName, MAX(Invoice.Total) FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId;\nExample 8 - Question: Find the names and emails of customers who have made purchases over $20. SQL: SELECT DISTINCT Customer.FirstName, Customer.LastName, Customer.Email FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId WHERE Invoice.Total > 20;\n\n### Question:\nWhich customers have more than 2 invoices?\n\n### SQL:"
    },
    {
        "question": "List all albums with more than 15 tracks.",
        "query": "SELECT AlbumId FROM Track GROUP BY AlbumId HAVING COUNT(*) > 15;",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 23 - Question: List all albums with more than 10 tracks. SQL: SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.Title HAVING COUNT(Track.TrackId) > 10;\nExample 30 - Question: List the number of tracks per album. SQL: SELECT AlbumId, COUNT(*) as TrackCount FROM Track GROUP BY AlbumId;\nExample 41 - Question: Which artist has the most albums? SQL: SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.Name ORDER BY COUNT(Album.AlbumId) DESC LIMIT 1;\nExample 25 - Question: Show the artist names who have more than 5 albums. SQL: SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.Name HAVING COUNT(Album.AlbumId) > 5;\n\n### Question:\nList all albums with more than 15 tracks.\n\n### SQL:"
    },
    {
        "question": "Find customers who live in cities starting with 'L'.",
        "query": "SELECT FirstName, LastName FROM Customer WHERE City LIKE 'L%';",
        "prompt": "You are a SQL expert. Use the following context to write an accurate SQL query.\n\n### Context:\nExample 15 - Question: Which customers live in cities that start with 'P'? SQL: SELECT FirstName, LastName, City FROM Customer WHERE City LIKE 'P%';\nExample 47 - Question: Find customers who live in both Paris and Berlin. SQL: SELECT FirstName, LastName, City FROM Customer WHERE City IN ('Paris', 'Berlin');\nExample 21 - Question: List the email addresses of customers who live in Paris. SQL: SELECT Email FROM Customer WHERE City = 'Paris';\nExample 10 - Question: How many different cities are our customers from? SQL: SELECT COUNT(DISTINCT City) FROM Customer;\n\n### Question:\nFind customers who live in cities starting with 'L'.\n\n### SQL:"
    }
]