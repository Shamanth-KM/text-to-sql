question,ground_truth,generated_sql,exact_match,execution_match,execution_error
What are the names of all albums by AC/DC?,SELECT Title FROM Album JOIN Artist ON Album.ArtistId = Artist.ArtistId WHERE Artist.Name = 'AC/DC';,SELECT Title FROM Album WHERE ArtistId = (SELECT ArtistId FROM Artist WHERE Name = 'AC/DC');,False,True,
Which customers are from Brazil?,"SELECT FirstName, LastName FROM Customer WHERE Country = 'Brazil';","SELECT DISTINCT c.CustomerId, c.FirstName, c.LastName, c.Email FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId JOIN Album a ON t.AlbumId = a.AlbumId JOIN Artist ar ON a.ArtistId = ar.ArtistId JOIN Country co ON ar.ArtistId = co.ArtistId WHERE co.Country = 'Brazil'",False,False,no such table: Country
List the top 5 most purchased tracks.,"SELECT Track.Name, COUNT(*) as Purchases FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Track.Name ORDER BY Purchases DESC LIMIT 5;","SELECT TOP 5 T.Name, T.AlbumId, T.MediaTypeId, T.GenreId, T.Composer, T.Milliseconds, T.Bytes, T.UnitPrice, COUNT(I.InvoiceLineId) AS 'Purchased' FROM Track T INNER JOIN InvoiceLine I ON T.TrackId = I.TrackId GROUP BY T.Name, T.AlbumId, T.MediaTypeId, T.GenreId, T.Composer, T.Milliseconds, T.Bytes, T.UnitPrice ORDER BY COUNT(I.InvoiceLineId) DESC",False,False,"near ""5"": syntax error"
How many invoices were created in the year 2012?,SELECT COUNT(*) FROM Invoice WHERE InvoiceDate LIKE '2012%';,SELECT COUNT(*) FROM Invoice WHERE InvoiceDate >= '2012-01-01' AND InvoiceDate < '2013-01-01',False,True,
Which employees are sales agents?,"SELECT FirstName, LastName FROM Employee WHERE Title = 'Sales Support Agent';","SELECT EmployeeId, LastName, FirstName, Title FROM Employee WHERE Title = 'Sales Agent'",False,False,
Show the total sales per country.,"SELECT BillingCountry, SUM(Total) as TotalSales FROM Invoice GROUP BY BillingCountry ORDER BY TotalSales DESC;","SELECT Country, SUM(Total) AS TotalSales FROM Invoice JOIN Customer ON Invoice.CustomerId = Customer.CustomerId JOIN Employee ON Customer.SupportRepId = Employee.EmployeeId GROUP BY Country ORDER BY TotalSales DESC;",False,False,ambiguous column name: Country
List all unique genres in the database.,SELECT DISTINCT Name FROM Genre;,SELECT DISTINCT Genre.Name FROM Genre ORDER BY Genre.Name,False,True,
Find the names and emails of customers who have made purchases over $20.,"SELECT DISTINCT Customer.FirstName, Customer.LastName, Customer.Email FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId WHERE Invoice.Total > 20;","SELECT c.FirstName, c.LastName, c.Email FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId JOIN Album a ON t.AlbumId = a.AlbumId JOIN Artist ar ON a.ArtistId = ar.ArtistId WHERE il.UnitPrice > 20 GROUP BY c.FirstName, c.LastName, c.Email HAVING COUNT(DISTINCT t.TrackId) > 0 ORDER BY c.LastName, c.FirstName;",False,False,
Which employee reports to Andrew Adams?,"SELECT FirstName, LastName FROM Employee WHERE ReportsTo = (SELECT EmployeeId FROM Employee WHERE FirstName = 'Andrew' AND LastName = 'Adams');","SELECT EmployeeId, LastName, FirstName, Title, ReportsTo FROM Employee WHERE ReportsTo = 1;",False,False,
How many different cities are our customers from?,SELECT COUNT(DISTINCT City) FROM Customer;,SELECT DISTINCT City FROM Customer,False,False,
Which customer made the highest invoice total?,"SELECT Customer.FirstName, Customer.LastName, MAX(Invoice.Total) FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId;","SELECT TOP 1 CustomerId, Total FROM Invoice ORDER BY Total DESC",False,False,"near ""1"": syntax error"
Show the number of invoices per customer.,"SELECT CustomerId, COUNT(*) as InvoiceCount FROM Invoice GROUP BY CustomerId;","SELECT COUNT(DISTINCT Invoice.InvoiceId) AS InvoiceCount, Customer.CustomerId, Customer.FirstName, Customer.LastName FROM Invoice INNER JOIN Customer ON Invoice.CustomerId = Customer.CustomerId GROUP BY Customer.CustomerId, Customer.FirstName, Customer.LastName ORDER BY InvoiceCount DESC;",False,False,
List employees who are managers.,"SELECT FirstName, LastName FROM Employee WHERE Title LIKE '%Manager%';","SELECT EmployeeId, LastName, FirstName, Title, ReportsTo FROM Employee WHERE ReportsTo IS NOT NULL ORDER BY EmployeeId",False,False,
Which invoices were billed to customers in Canada?,"SELECT InvoiceId, BillingCity FROM Invoice WHERE BillingCountry = 'Canada';",SELECT InvoiceId FROM Invoice WHERE BillingCountry = 'Canada',False,False,
Which customers live in cities that start with 'P'?,"SELECT FirstName, LastName, City FROM Customer WHERE City LIKE 'P%';","SELECT CustomerId, FirstName, LastName, City FROM Customer WHERE City LIKE 'P%' ORDER BY CustomerId",False,False,
What is the total sales value for each billing city?,"SELECT BillingCity, SUM(Total) FROM Invoice GROUP BY BillingCity;","SELECT billingcity, SUM(total) FROM invoice GROUP BY billingcity ORDER BY billingcity",False,True,
Find the most common billing country.,"SELECT BillingCountry, COUNT(*) as InvoiceCount FROM Invoice GROUP BY BillingCountry ORDER BY InvoiceCount DESC LIMIT 1;","SELECT billing_country, COUNT(*) as count FROM invoice GROUP BY billing_country ORDER BY count DESC LIMIT 1;",False,False,no such column: billing_country
Show the customers who have not made any purchases.,"SELECT FirstName, LastName FROM Customer WHERE CustomerId NOT IN (SELECT CustomerId FROM Invoice);","SELECT c.CustomerId, c.FirstName, c.LastName, c.Email FROM Customer c LEFT JOIN Invoice i ON c.CustomerId = i.CustomerId WHERE i.CustomerId IS NULL;",False,True,
Find all customers whose last name starts with 'S'.,"SELECT FirstName, LastName FROM Customer WHERE LastName LIKE 'S%';",SELECT * FROM Customer WHERE LastName LIKE 'S%';,False,False,
List all albums with more than 10 tracks.,SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.Title HAVING COUNT(Track.TrackId) > 10;,SELECT * FROM Album WHERE TrackId > 10;,False,False,no such column: TrackId
Get the top 3 countries by number of customers.,"SELECT Country, COUNT(*) as Count FROM Customer GROUP BY Country ORDER BY Count DESC LIMIT 3;","SELECT TOP 3 Country, COUNT(CustomerId) AS NumberOfCustomers FROM Customer GROUP BY Country ORDER BY NumberOfCustomers DESC;",False,False,"near ""3"": syntax error"
Show the artist names who have more than 5 albums.,SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.Name HAVING COUNT(Album.AlbumId) > 5;,SELECT a.Name FROM Artist a JOIN Album a2 ON a.ArtistId = a2.ArtistId GROUP BY a.Name HAVING COUNT(a2.AlbumId) > 5;,False,True,
How many employees do we have per city?,"SELECT City, COUNT(*) as EmployeeCount FROM Employee GROUP BY City;","SELECT city, COUNT(*) AS employees FROM employee GROUP BY city ORDER BY employees DESC;",False,True,
Which customers are from Germany and have a Gmail email address?,"SELECT FirstName, LastName FROM Customer WHERE Country = 'Germany' AND Email LIKE '%@gmail.com';","SELECT c.CustomerId, c.FirstName, c.LastName, c.Email FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId JOIN Album a ON t.AlbumId = a.AlbumId JOIN Artist ar ON a.ArtistId = ar.ArtistId WHERE ar.Name = 'Germany' AND c.Email LIKE '%@gmail.com';",False,True,
What are the names of all tracks in the 'Rock' genre?,SELECT Track.Name FROM Track JOIN Genre ON Track.GenreId = Genre.GenreId WHERE Genre.Name = 'Rock';,SELECT Name FROM Track INNER JOIN Genre ON Track.GenreId = Genre.GenreId WHERE Name = 'Rock',False,False,ambiguous column name: Name
Find tracks that cost more than $0.99.,"SELECT Name, UnitPrice FROM Track WHERE UnitPrice > 0.99;",SELECT * FROM Track WHERE UnitPrice > 0.99;,False,False,
List the number of tracks per album.,"SELECT AlbumId, COUNT(*) as TrackCount FROM Track GROUP BY AlbumId;","SELECT a.Title, COUNT(t.TrackId) AS TrackCount FROM Album a JOIN Track t ON a.AlbumId = t.AlbumId GROUP BY a.Title ORDER BY TrackCount DESC;",False,False,
Show the customers who bought tracks composed by 'AC/DC'.,"SELECT DISTINCT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Artist ON Album.ArtistId = Artist.ArtistId WHERE Artist.Name = 'AC/DC';","SELECT c.CustomerId, c.FirstName, c.LastName, c.Email FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId JOIN Artist a ON t.AlbumId = a.ArtistId WHERE a.Name = 'AC/DC'",False,False,
Get the average invoice total.,SELECT AVG(Total) FROM Invoice;,SELECT AVG(Total) FROM Invoice,False,True,
What is the longest track in the database?,SELECT Name FROM Track ORDER BY Milliseconds DESC LIMIT 1;,SELECT TOP 1 Name FROM Track ORDER BY Milliseconds DESC,False,False,"near ""1"": syntax error"
List all employees who do not report to anyone.,"SELECT FirstName, LastName FROM Employee WHERE ReportsTo IS NULL;",SELECT * FROM Employee WHERE ReportsTo IS NULL;,False,False,
What is the total duration of all tracks in seconds?,SELECT SUM(Milliseconds) / 1000 as TotalSeconds FROM Track;,SELECT SUM(Milliseconds) AS TotalDuration FROM Track;,False,False,
How many genres have more than 50 tracks?,SELECT COUNT(*) FROM (SELECT GenreId FROM Track GROUP BY GenreId HAVING COUNT(*) > 50);,SELECT COUNT(DISTINCT g.Name) FROM Genre g JOIN Track t ON g.GenreId = t.GenreId GROUP BY g.Name HAVING COUNT(DISTINCT t.TrackId) > 50;,False,False,
List the customers who have made more than 3 invoices.,"SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId HAVING COUNT(Invoice.InvoiceId) > 3;","SELECT c.CustomerId, c.FirstName, c.LastName, c.Email FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId GROUP BY c.CustomerId, c.FirstName, c.LastName, c.Email HAVING COUNT(i.InvoiceId) > 3;",False,False,
Which tracks belong to playlists named 'Grunge'?,SELECT Track.Name FROM Track JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId JOIN Playlist ON PlaylistTrack.PlaylistId = Playlist.PlaylistId WHERE Playlist.Name = 'Grunge';,SELECT DISTINCT t.Name FROM Track t INNER JOIN PlaylistTrack pt ON t.TrackId = pt.TrackId INNER JOIN Playlist p ON pt.PlaylistId = p.PlaylistId WHERE p.Name = 'Grunge';,False,True,
Show employees who are based in Canada.,"SELECT FirstName, LastName FROM Employee WHERE Country = 'Canada';",SELECT * FROM Employee WHERE Country = 'Canada';,False,False,
List all playlists and the number of tracks in each.,"SELECT Playlist.Name, COUNT(PlaylistTrack.TrackId) as TrackCount FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.Name;","SELECT p.Name, COUNT(t.TrackId) FROM Playlist p JOIN PlaylistTrack pt ON p.PlaylistId = pt.PlaylistId JOIN Track t ON t.TrackId = pt.TrackId GROUP BY p.Name ORDER BY COUNT(t.TrackId) DESC",False,True,
Which artist has the most albums?,SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.Name ORDER BY COUNT(Album.AlbumId) DESC LIMIT 1;,"SELECT TOP 1 Artist.Name, COUNT(Album.AlbumId) AS AlbumCount FROM Artist INNER JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.Name ORDER BY AlbumCount DESC;",False,False,"near ""1"": syntax error"
Find the most expensive track.,"SELECT Name, UnitPrice FROM Track ORDER BY UnitPrice DESC LIMIT 1;","SELECT TOP 1 T.Name, T.UnitPrice FROM Track T ORDER BY T.UnitPrice DESC",False,False,"near ""1"": syntax error"
What is the average price of a track?,SELECT AVG(UnitPrice) FROM Track;,SELECT AVG(UnitPrice) FROM Track,False,True,
List invoices made in August 2011.,SELECT * FROM Invoice WHERE InvoiceDate LIKE '2011-08%';,SELECT * FROM Invoice WHERE InvoiceDate BETWEEN '2011-08-01' AND '2011-08-31';,False,True,
Show all tracks that include 'love' in the name.,SELECT Name FROM Track WHERE Name LIKE '%love%';,SELECT * FROM Track WHERE Name LIKE '%love%',False,False,
How many customers are from each country?,"SELECT Country, COUNT(*) FROM Customer GROUP BY Country;","SELECT Country, COUNT(*) AS NumberOfCustomers FROM Customer GROUP BY Country ORDER BY NumberOfCustomers DESC;",False,True,
Find customers who live in both Paris and Berlin.,"SELECT FirstName, LastName, City FROM Customer WHERE City IN ('Paris', 'Berlin');","SELECT DISTINCT c.CustomerId, c.FirstName, c.LastName, c.Company, c.Address, c.City, c.State, c.Country, c.PostalCode, c.Phone, c.Fax, c.Email, c.SupportRepId FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId JOIN Album a ON t.AlbumId = a.AlbumId JOIN Artist ar ON a.ArtistId = ar.ArtistId WHERE c.City = 'Paris' AND ar.Name = 'Berlin'",False,False,
Which employees report to a manager named 'Steve'?,"SELECT e.FirstName, e.LastName FROM Employee e JOIN Employee m ON e.ReportsTo = m.EmployeeId WHERE m.FirstName = 'Steve';","SELECT e.LastName, e.FirstName FROM Employee e JOIN Employee m ON e.ReportsTo = m.EmployeeId WHERE m.LastName = 'Steve'",False,True,
Which customers have purchased tracks in the 'Jazz' genre?,"SELECT DISTINCT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId WHERE Genre.Name = 'Jazz';","SELECT DISTINCT c.CustomerId, c.FirstName, c.LastName, c.Email FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId JOIN Genre g ON t.GenreId = g.GenreId WHERE g.Name = 'Jazz' ORDER BY c.LastName, c.FirstName;",False,False,
Find the country with the highest number of customers.,SELECT Country FROM Customer GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1;,SELECT TOP 1 Country FROM Customer GROUP BY Country ORDER BY COUNT(CustomerId) DESC;,False,False,"near ""1"": syntax error"
List the invoice dates with total amount over $30.,SELECT InvoiceDate FROM Invoice WHERE Total > 30;,"SELECT InvoiceDate, Total FROM Invoice WHERE Total > 30 ORDER BY InvoiceDate",False,True,
How many tracks are there in each media type?,"SELECT MediaTypeId, COUNT(*) FROM Track GROUP BY MediaTypeId;","SELECT MediaType.Name, COUNT(Track.TrackId) AS TrackCount FROM MediaType INNER JOIN Track ON MediaType.MediaTypeId = Track.MediaTypeId GROUP BY MediaType.Name ORDER BY TrackCount DESC",False,False,
Which genres have an average track length over 4 minutes?,SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.Name HAVING AVG(Track.Milliseconds) > 240000;,SELECT g.Name FROM Genre g JOIN Track t ON g.GenreId = t.GenreId JOIN Album a ON t.AlbumId = a.AlbumId JOIN InvoiceLine il ON t.TrackId = il.TrackId JOIN Invoice i ON il.InvoiceId = i.InvoiceId JOIN Customer c ON i.CustomerId = c.CustomerId WHERE AVG(t.Milliseconds) > 240000 GROUP BY g.Name,False,False,misuse of aggregate: AVG()
List the top 3 customers who spent the most money.,"SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) as TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY TotalSpent DESC LIMIT 3;","SELECT TOP 3 c.CustomerId, c.FirstName, c.LastName, SUM(t.UnitPrice * t.Quantity) AS Total FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId GROUP BY c.CustomerId, c.FirstName, c.LastName ORDER BY Total DESC;",False,False,"near ""3"": syntax error"
Which artists have more than 20 tracks in the database?,SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.Name HAVING COUNT(Track.TrackId) > 20;,SELECT a.Name FROM Artist a JOIN Track t ON a.ArtistId = t.ArtistId GROUP BY a.Name HAVING COUNT(t.TrackId) > 20;,False,False,no such column: t.ArtistId
What are the 10 most recently created invoices?,SELECT * FROM Invoice ORDER BY InvoiceDate DESC LIMIT 10;,SELECT TOP 10 * FROM Invoice ORDER BY InvoiceDate DESC,False,False,"near ""10"": syntax error"
Find tracks with names that include the word 'baby'.,SELECT Name FROM Track WHERE Name LIKE '%baby%';,SELECT * FROM Track WHERE Name LIKE '%baby%';,False,False,
Which employees are located in the USA?,"SELECT FirstName, LastName FROM Employee WHERE Country = 'USA';","SELECT EmployeeId, LastName, FirstName, Title, ReportsTo, BirthDate, HireDate, Address, City, State, Country, PostalCode, Phone, Fax, Email FROM Employee WHERE Country = 'USA';",False,True,
Find playlists that have less than 10 tracks.,SELECT Playlist.Name FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.Name HAVING COUNT(PlaylistTrack.TrackId) < 10;,SELECT * FROM Playlist WHERE (SELECT COUNT(*) FROM PlaylistTrack WHERE PlaylistTrack.PlaylistId = Playlist.PlaylistId) < 10;,False,False,
Which albums have tracks with the highest average unit price?,SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY AVG(Track.UnitPrice) DESC LIMIT 5;,"SELECT a.Title, AVG(t.UnitPrice) FROM Album a JOIN Track t ON a.AlbumId = t.AlbumId GROUP BY a.Title ORDER BY AVG(t.UnitPrice) DESC LIMIT 10;",False,False,
Get the details of the longest invoice item.,SELECT * FROM InvoiceLine ORDER BY Quantity DESC LIMIT 1;,"SELECT TOP 1 i.InvoiceId, i.InvoiceDate, t.Name, t.UnitPrice, t.Quantity FROM Invoice i JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId ORDER BY t.UnitPrice * t.Quantity DESC",False,False,"near ""1"": syntax error"
List the tracks that are not in any playlist.,SELECT Name FROM Track WHERE TrackId NOT IN (SELECT TrackId FROM PlaylistTrack);,SELECT * FROM Track WHERE TrackId NOT IN (SELECT TrackId FROM PlaylistTrack),False,True,
Find customers who have more than one invoice from the same country.,"SELECT CustomerId, COUNT(*) as InvoiceCount FROM Invoice GROUP BY CustomerId, BillingCountry HAVING InvoiceCount > 1;","SELECT c.CustomerId, c.FirstName, c.LastName, c.Country, COUNT(i.InvoiceId) AS InvoiceCount FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId JOIN Album a ON t.AlbumId = a.AlbumId JOIN Artist ar ON a.ArtistId = ar.ArtistId GROUP BY c.CustomerId, c.FirstName, c.LastName, c.Country HAVING COUNT(i.InvoiceId) > 1 ORDER BY c.Country, c.LastName, c.FirstName;",False,False,
Which invoices were billed in cities starting with 'L'?,SELECT InvoiceId FROM Invoice WHERE BillingCity LIKE 'L%';,SELECT InvoiceId FROM Invoice WHERE BillingCity LIKE 'L%',False,True,
Which genres have more than 100 tracks?,SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId HAVING COUNT(*) > 100;,SELECT g.Name FROM Genre g JOIN Track t ON g.GenreId = t.GenreId GROUP BY g.Name HAVING COUNT(t.TrackId) > 100,False,True,
Show the invoices with the lowest totals.,SELECT * FROM Invoice ORDER BY Total ASC LIMIT 5;,SELECT * FROM Invoice WHERE Total = (SELECT MIN(Total) FROM Invoice),False,False,
List employees along with their managers’ names.,"SELECT e.FirstName, e.LastName, m.FirstName as ManagerFirst, m.LastName as ManagerLast FROM Employee e LEFT JOIN Employee m ON e.ReportsTo = m.EmployeeId;","SELECT e.LastName, e.FirstName, e.ReportsTo, m.LastName AS ManagerLastName, m.FirstName AS ManagerFirstName FROM Employee e LEFT JOIN Employee m ON e.ReportsTo = m.EmployeeId ORDER BY e.LastName, e.FirstName;",False,False,
Get all albums that contain the word 'Greatest'.,SELECT Title FROM Album WHERE Title LIKE '%Greatest%';,SELECT * FROM Album WHERE Title LIKE '%Greatest%';,False,False,
Which customers have purchased from more than 2 different billing cities?,"SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId HAVING COUNT(DISTINCT Invoice.BillingCity) > 2;","SELECT c.CustomerId, c.FirstName, c.LastName, c.Email, c.Company, c.Address, c.City, c.State, c.Country, c.PostalCode, c.Phone, c.Fax, c.SupportRepId, c.BillingAddress, c.BillingCity, c.BillingState, c.BillingCountry, c.BillingPostalCode FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId JOIN Album a ON t.AlbumId = a.AlbumId JOIN Artist ar ON a.ArtistId = ar.ArtistId WHERE c.BillingCity!= ar.Name GROUP BY c.CustomerId, c.FirstName, c.LastName, c.Email, c.Company, c.Address, c.City, c.State, c.Country, c.PostalCode, c.Phone, c.Fax, c.SupportRepId, c.",False,False,incomplete input
Find the top 3 invoice totals and the customer names.,"SELECT Customer.FirstName, Customer.LastName, Invoice.Total FROM Invoice JOIN Customer ON Invoice.CustomerId = Customer.CustomerId ORDER BY Invoice.Total DESC LIMIT 3;","SELECT TOP 3 Invoice.Total, Customer.FirstName, Customer.LastName FROM Invoice INNER JOIN Customer ON Invoice.CustomerId = Customer.CustomerId ORDER BY Invoice.Total DESC;",False,False,"near ""3"": syntax error"
Which artists have albums but no tracks?,SELECT Artist.Name FROM Artist LEFT JOIN Album ON Artist.ArtistId = Album.ArtistId LEFT JOIN Track ON Album.AlbumId = Track.AlbumId WHERE Track.TrackId IS NULL;,SELECT a.Name FROM Artist a LEFT JOIN Album a2 ON a.ArtistId = a2.ArtistId LEFT JOIN Track t ON a2.AlbumId = t.AlbumId WHERE t.AlbumId IS NULL GROUP BY a.Name,False,True,
Show total number of invoice items per billing country.,"SELECT Invoice.BillingCountry, COUNT(InvoiceLine.InvoiceLineId) as ItemCount FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Invoice.BillingCountry;","SELECT COUNT(InvoiceLineId) AS 'Total Invoice Items', Country FROM InvoiceLine JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId JOIN Customer ON Invoice.CustomerId = Customer.CustomerId GROUP BY Country ORDER BY Country;",False,False,
Which tracks appear in the most playlists?,"SELECT Track.Name, COUNT(PlaylistTrack.PlaylistId) as PlaylistCount FROM Track JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId GROUP BY Track.Name ORDER BY PlaylistCount DESC LIMIT 5;","SELECT t.Name, COUNT(DISTINCT p.PlaylistId) AS PlaylistCount FROM Track t INNER JOIN PlaylistTrack pt ON t.TrackId = pt.TrackId INNER JOIN Playlist p ON pt.PlaylistId = p.PlaylistId GROUP BY t.Name ORDER BY PlaylistCount DESC",False,False,
How many customers have the same phone number prefix?,"SELECT SUBSTR(Phone, 1, 3) as Prefix, COUNT(*) FROM Customer GROUP BY Prefix HAVING COUNT(*) > 1;",SELECT COUNT(*) FROM Customer WHERE Phone LIKE '123%',False,False,
Get the total revenue by invoice month.,"SELECT SUBSTR(InvoiceDate, 1, 7) as Month, SUM(Total) FROM Invoice GROUP BY Month ORDER BY Month;","SELECT EXTRACT(MONTH FROM InvoiceDate) AS Month, EXTRACT(YEAR FROM InvoiceDate) AS Year, SUM(Total) AS TotalRevenue FROM Invoice GROUP BY Month, Year ORDER BY Year, Month;",False,False,"near ""FROM"": syntax error"
Find the customers with the same support rep.,"SELECT SupportRepId, COUNT(*) as Count FROM Customer GROUP BY SupportRepId HAVING Count > 1;","SELECT c1.CustomerId, c1.FirstName, c1.LastName, c1.Email, c2.FirstName, c2.LastName, c2.Email FROM Customer c1 JOIN Customer c2 ON c1.SupportRepId = c2.SupportRepId WHERE c1.CustomerId!= c2.CustomerId",False,False,
Which employees are responsible for customers from Germany?,"SELECT DISTINCT e.FirstName, e.LastName FROM Employee e JOIN Customer c ON e.EmployeeId = c.SupportRepId WHERE c.Country = 'Germany';","SELECT e.LastName, e.FirstName FROM Employee e JOIN Customer c ON e.EmployeeId = c.SupportRepId JOIN Address a ON c.CustomerId = a.CustomerId WHERE a.Country = 'Germany'",False,False,no such table: Address
What is the average number of tracks per playlist?,"SELECT AVG(TrackCount) FROM (SELECT PlaylistId, COUNT(*) as TrackCount FROM PlaylistTrack GROUP BY PlaylistId);",SELECT AVG(COUNT(DISTINCT t.TrackId)) FROM Playlist p JOIN PlaylistTrack pt ON p.PlaylistId = pt.PlaylistId JOIN Track t ON t.TrackId = pt.TrackId GROUP BY p.PlaylistId,False,False,misuse of aggregate function COUNT()
Find all invoices that include exactly 3 items.,SELECT InvoiceId FROM InvoiceLine GROUP BY InvoiceId HAVING COUNT(*) = 3;,SELECT * FROM Invoice WHERE InvoiceLineId = 3;,False,False,no such column: InvoiceLineId
Which countries have more than 5 customers?,SELECT Country FROM Customer GROUP BY Country HAVING COUNT(*) > 5;,SELECT Country FROM Customer GROUP BY Country HAVING COUNT(Country) > 5;,False,True,
Which customers have an invoice average above $25?,"SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId HAVING AVG(Invoice.Total) > 25;","SELECT c.CustomerId, c.FirstName, c.LastName, c.Email, AVG(i.Total) AS Average FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId GROUP BY c.CustomerId, c.FirstName, c.LastName, c.Email HAVING AVG(i.Total) > 25;",False,True,
Which tracks have more than 2 media types?,SELECT Track.Name FROM Track GROUP BY Track.Name HAVING COUNT(DISTINCT MediaTypeId) > 2;,SELECT t.Name FROM Track t JOIN MediaType mt ON t.MediaTypeId = mt.MediaTypeId GROUP BY t.Name HAVING COUNT(mt.MediaTypeId) > 2;,False,False,
Find customers with first names that end in 'a'.,"SELECT FirstName, LastName FROM Customer WHERE FirstName LIKE '%a';",SELECT FirstName FROM Customer WHERE FirstName LIKE '%a';,False,False,
Which artists have albums with no associated tracks?,SELECT DISTINCT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId LEFT JOIN Track ON Album.AlbumId = Track.AlbumId WHERE Track.TrackId IS NULL;,SELECT a.Name FROM Artist a LEFT JOIN Album al ON a.ArtistId = al.ArtistId LEFT JOIN Track t ON al.AlbumId = t.AlbumId GROUP BY a.Name HAVING COUNT(t.TrackId) = 0;,False,False,
Show tracks that were purchased more than 10 times.,SELECT Track.Name FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Track.TrackId HAVING COUNT(*) > 10;,SELECT t.Name FROM Track t JOIN InvoiceLine il ON t.TrackId = il.TrackId JOIN Invoice i ON il.InvoiceId = i.InvoiceId WHERE i.InvoiceDate > '2010-01-01' GROUP BY t.Name HAVING COUNT(t.Name) > 10 ORDER BY COUNT(t.Name) DESC;,False,True,
Which invoices have more than $40 in total and less than 5 items?,SELECT Invoice.InvoiceId FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Invoice.InvoiceId HAVING SUM(Invoice.Total) > 40 AND COUNT(InvoiceLine.InvoiceLineId) < 5;,SELECT InvoiceId FROM Invoice WHERE Total > 40 AND (SELECT COUNT(*) FROM InvoiceLine WHERE InvoiceId = Invoice.InvoiceId) < 5;,False,True,
Find the number of albums per artist.,"SELECT Artist.Name, COUNT(Album.AlbumId) as AlbumCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;","SELECT a.ArtistId, COUNT(a.ArtistId) AS NumberOfAlbums FROM Album a GROUP BY a.ArtistId ORDER BY NumberOfAlbums DESC;",False,False,
List all customers who purchased Jazz tracks and live in Canada.,"SELECT DISTINCT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId WHERE Genre.Name = 'Jazz' AND Customer.Country = 'Canada';","SELECT c.CustomerId, c.FirstName, c.LastName, c.Email FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId JOIN Genre g ON t.GenreId = g.GenreId JOIN MediaType mt ON t.MediaTypeId = mt.MediaTypeId WHERE g.Name = 'Jazz' AND mt.Name = 'Music' AND c.Country = 'Canada'",False,False,
