[
    {
        "index": 0,
        "question": "What are the names of all albums by AC/DC?",
        "ground_truth": "SELECT Title FROM Album JOIN Artist ON Album.ArtistId = Artist.ArtistId WHERE Artist.Name = 'AC/DC';",
        "generated_sql": "SELECT Title FROM Album WHERE ArtistId = (SELECT ArtistId FROM Artist WHERE Name = 'AC/DC');"
    },
    {
        "index": 1,
        "question": "Which customers are from Brazil?",
        "ground_truth": "SELECT FirstName, LastName FROM Customer WHERE Country = 'Brazil';",
        "generated_sql": "SELECT DISTINCT c.CustomerId, c.FirstName, c.LastName, c.Email FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId JOIN Album a ON t.AlbumId = a.AlbumId JOIN Artist ar ON a.ArtistId = ar.ArtistId JOIN Country co ON ar.ArtistId = co.ArtistId WHERE co.Country = 'Brazil'"
    },
    {
        "index": 2,
        "question": "List the top 5 most purchased tracks.",
        "ground_truth": "SELECT Track.Name, COUNT(*) as Purchases FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Track.Name ORDER BY Purchases DESC LIMIT 5;",
        "generated_sql": "SELECT TOP 5 T.Name, T.AlbumId, T.MediaTypeId, T.GenreId, T.Composer, T.Milliseconds, T.Bytes, T.UnitPrice, COUNT(I.InvoiceLineId) AS 'Purchased' FROM Track T INNER JOIN InvoiceLine I ON T.TrackId = I.TrackId GROUP BY T.Name, T.AlbumId, T.MediaTypeId, T.GenreId, T.Composer, T.Milliseconds, T.Bytes, T.UnitPrice ORDER BY COUNT(I.InvoiceLineId) DESC"
    },
    {
        "index": 3,
        "question": "How many invoices were created in the year 2012?",
        "ground_truth": "SELECT COUNT(*) FROM Invoice WHERE InvoiceDate LIKE '2012%';",
        "generated_sql": "SELECT COUNT(*) FROM Invoice WHERE InvoiceDate >= '2012-01-01' AND InvoiceDate < '2013-01-01'"
    },
    {
        "index": 4,
        "question": "Which employees are sales agents?",
        "ground_truth": "SELECT FirstName, LastName FROM Employee WHERE Title = 'Sales Support Agent';",
        "generated_sql": "SELECT EmployeeId, LastName, FirstName, Title FROM Employee WHERE Title = 'Sales Agent'"
    },
    {
        "index": 5,
        "question": "Show the total sales per country.",
        "ground_truth": "SELECT BillingCountry, SUM(Total) as TotalSales FROM Invoice GROUP BY BillingCountry ORDER BY TotalSales DESC;",
        "generated_sql": "SELECT Country, SUM(Total) AS TotalSales FROM Invoice JOIN Customer ON Invoice.CustomerId = Customer.CustomerId JOIN Employee ON Customer.SupportRepId = Employee.EmployeeId GROUP BY Country ORDER BY TotalSales DESC;"
    },
    {
        "index": 6,
        "question": "List all unique genres in the database.",
        "ground_truth": "SELECT DISTINCT Name FROM Genre;",
        "generated_sql": "SELECT DISTINCT Genre.Name FROM Genre ORDER BY Genre.Name"
    },
    {
        "index": 7,
        "question": "Find the names and emails of customers who have made purchases over $20.",
        "ground_truth": "SELECT DISTINCT Customer.FirstName, Customer.LastName, Customer.Email FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId WHERE Invoice.Total > 20;",
        "generated_sql": "SELECT c.FirstName, c.LastName, c.Email FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId JOIN Album a ON t.AlbumId = a.AlbumId JOIN Artist ar ON a.ArtistId = ar.ArtistId WHERE il.UnitPrice > 20 GROUP BY c.FirstName, c.LastName, c.Email HAVING COUNT(DISTINCT t.TrackId) > 0 ORDER BY c.LastName, c.FirstName;"
    },
    {
        "index": 8,
        "question": "Which employee reports to Andrew Adams?",
        "ground_truth": "SELECT FirstName, LastName FROM Employee WHERE ReportsTo = (SELECT EmployeeId FROM Employee WHERE FirstName = 'Andrew' AND LastName = 'Adams');",
        "generated_sql": "SELECT EmployeeId, LastName, FirstName, Title, ReportsTo FROM Employee WHERE ReportsTo = 1;"
    },
    {
        "index": 9,
        "question": "How many different cities are our customers from?",
        "ground_truth": "SELECT COUNT(DISTINCT City) FROM Customer;",
        "generated_sql": "SELECT DISTINCT City FROM Customer"
    },
    {
        "index": 10,
        "question": "Which customer made the highest invoice total?",
        "ground_truth": "SELECT Customer.FirstName, Customer.LastName, MAX(Invoice.Total) FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId;",
        "generated_sql": "SELECT TOP 1 CustomerId, Total FROM Invoice ORDER BY Total DESC"
    },
    {
        "index": 11,
        "question": "Show the number of invoices per customer.",
        "ground_truth": "SELECT CustomerId, COUNT(*) as InvoiceCount FROM Invoice GROUP BY CustomerId;",
        "generated_sql": "SELECT COUNT(DISTINCT Invoice.InvoiceId) AS InvoiceCount, Customer.CustomerId, Customer.FirstName, Customer.LastName FROM Invoice INNER JOIN Customer ON Invoice.CustomerId = Customer.CustomerId GROUP BY Customer.CustomerId, Customer.FirstName, Customer.LastName ORDER BY InvoiceCount DESC;"
    },
    {
        "index": 12,
        "question": "List employees who are managers.",
        "ground_truth": "SELECT FirstName, LastName FROM Employee WHERE Title LIKE '%Manager%';",
        "generated_sql": "SELECT EmployeeId, LastName, FirstName, Title, ReportsTo FROM Employee WHERE ReportsTo IS NOT NULL ORDER BY EmployeeId"
    },
    {
        "index": 13,
        "question": "Which invoices were billed to customers in Canada?",
        "ground_truth": "SELECT InvoiceId, BillingCity FROM Invoice WHERE BillingCountry = 'Canada';",
        "generated_sql": "SELECT InvoiceId FROM Invoice WHERE BillingCountry = 'Canada'"
    },
    {
        "index": 14,
        "question": "Which customers live in cities that start with 'P'?",
        "ground_truth": "SELECT FirstName, LastName, City FROM Customer WHERE City LIKE 'P%';",
        "generated_sql": "SELECT CustomerId, FirstName, LastName, City FROM Customer WHERE City LIKE 'P%' ORDER BY CustomerId"
    },
    {
        "index": 15,
        "question": "What is the total sales value for each billing city?",
        "ground_truth": "SELECT BillingCity, SUM(Total) FROM Invoice GROUP BY BillingCity;",
        "generated_sql": "SELECT billingcity, SUM(total) FROM invoice GROUP BY billingcity ORDER BY billingcity"
    },
    {
        "index": 16,
        "question": "Find the most common billing country.",
        "ground_truth": "SELECT BillingCountry, COUNT(*) as InvoiceCount FROM Invoice GROUP BY BillingCountry ORDER BY InvoiceCount DESC LIMIT 1;",
        "generated_sql": "SELECT billing_country, COUNT(*) as count FROM invoice GROUP BY billing_country ORDER BY count DESC LIMIT 1;"
    },
    {
        "index": 17,
        "question": "Show the customers who have not made any purchases.",
        "ground_truth": "SELECT FirstName, LastName FROM Customer WHERE CustomerId NOT IN (SELECT CustomerId FROM Invoice);",
        "generated_sql": "SELECT c.CustomerId, c.FirstName, c.LastName, c.Email FROM Customer c LEFT JOIN Invoice i ON c.CustomerId = i.CustomerId WHERE i.CustomerId IS NULL;"
    },
    {
        "index": 18,
        "question": "Which tracks are longer than 5 minutes?",
        "ground_truth": "SELECT Name FROM Track WHERE Milliseconds > 300000;",
        "generated_sql": "SELECT Name FROM Track WHERE Milliseconds > 300000;"
    },
    {
        "index": 19,
        "question": "How many invoices have a total between $10 and $15?",
        "ground_truth": "SELECT COUNT(*) FROM Invoice WHERE Total BETWEEN 10 AND 15;",
        "generated_sql": "SELECT COUNT(*) FROM Invoice WHERE Total BETWEEN 10 AND 15;"
    },
    {
        "index": 20,
        "question": "List the email addresses of customers who live in Paris.",
        "ground_truth": "SELECT Email FROM Customer WHERE City = 'Paris';",
        "generated_sql": "SELECT Email FROM Customer WHERE City = 'Paris';"
    },
    {
        "index": 21,
        "question": "Find all customers whose last name starts with 'S'.",
        "ground_truth": "SELECT FirstName, LastName FROM Customer WHERE LastName LIKE 'S%';",
        "generated_sql": "SELECT * FROM Customer WHERE LastName LIKE 'S%';"
    },
    {
        "index": 22,
        "question": "List all albums with more than 10 tracks.",
        "ground_truth": "SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.Title HAVING COUNT(Track.TrackId) > 10;",
        "generated_sql": "SELECT * FROM Album WHERE TrackId > 10;"
    },
    {
        "index": 23,
        "question": "Get the top 3 countries by number of customers.",
        "ground_truth": "SELECT Country, COUNT(*) as Count FROM Customer GROUP BY Country ORDER BY Count DESC LIMIT 3;",
        "generated_sql": "SELECT TOP 3 Country, COUNT(CustomerId) AS NumberOfCustomers FROM Customer GROUP BY Country ORDER BY NumberOfCustomers DESC;"
    },
    {
        "index": 24,
        "question": "Show the artist names who have more than 5 albums.",
        "ground_truth": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.Name HAVING COUNT(Album.AlbumId) > 5;",
        "generated_sql": "SELECT a.Name FROM Artist a JOIN Album a2 ON a.ArtistId = a2.ArtistId GROUP BY a.Name HAVING COUNT(a2.AlbumId) > 5;"
    },
    {
        "index": 25,
        "question": "How many employees do we have per city?",
        "ground_truth": "SELECT City, COUNT(*) as EmployeeCount FROM Employee GROUP BY City;",
        "generated_sql": "SELECT city, COUNT(*) AS employees FROM employee GROUP BY city ORDER BY employees DESC;"
    },
    {
        "index": 26,
        "question": "Which customers are from Germany and have a Gmail email address?",
        "ground_truth": "SELECT FirstName, LastName FROM Customer WHERE Country = 'Germany' AND Email LIKE '%@gmail.com';",
        "generated_sql": "SELECT c.CustomerId, c.FirstName, c.LastName, c.Email FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId JOIN Album a ON t.AlbumId = a.AlbumId JOIN Artist ar ON a.ArtistId = ar.ArtistId WHERE ar.Name = 'Germany' AND c.Email LIKE '%@gmail.com';"
    },
    {
        "index": 27,
        "question": "What are the names of all tracks in the 'Rock' genre?",
        "ground_truth": "SELECT Track.Name FROM Track JOIN Genre ON Track.GenreId = Genre.GenreId WHERE Genre.Name = 'Rock';",
        "generated_sql": "SELECT Name FROM Track INNER JOIN Genre ON Track.GenreId = Genre.GenreId WHERE Name = 'Rock'"
    },
    {
        "index": 28,
        "question": "Find tracks that cost more than $0.99.",
        "ground_truth": "SELECT Name, UnitPrice FROM Track WHERE UnitPrice > 0.99;",
        "generated_sql": "SELECT * FROM Track WHERE UnitPrice > 0.99;"
    },
    {
        "index": 29,
        "question": "List the number of tracks per album.",
        "ground_truth": "SELECT AlbumId, COUNT(*) as TrackCount FROM Track GROUP BY AlbumId;",
        "generated_sql": "SELECT a.Title, COUNT(t.TrackId) AS TrackCount FROM Album a JOIN Track t ON a.AlbumId = t.AlbumId GROUP BY a.Title ORDER BY TrackCount DESC;"
    },
    {
        "index": 30,
        "question": "Show the customers who bought tracks composed by 'AC/DC'.",
        "ground_truth": "SELECT DISTINCT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Artist ON Album.ArtistId = Artist.ArtistId WHERE Artist.Name = 'AC/DC';",
        "generated_sql": "SELECT c.CustomerId, c.FirstName, c.LastName, c.Email FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId JOIN Artist a ON t.AlbumId = a.ArtistId WHERE a.Name = 'AC/DC'"
    },
    {
        "index": 31,
        "question": "Get the average invoice total.",
        "ground_truth": "SELECT AVG(Total) FROM Invoice;",
        "generated_sql": "SELECT AVG(Total) FROM Invoice"
    },
    {
        "index": 32,
        "question": "What is the longest track in the database?",
        "ground_truth": "SELECT Name FROM Track ORDER BY Milliseconds DESC LIMIT 1;",
        "generated_sql": "SELECT TOP 1 Name FROM Track ORDER BY Milliseconds DESC"
    },
    {
        "index": 33,
        "question": "List all employees who do not report to anyone.",
        "ground_truth": "SELECT FirstName, LastName FROM Employee WHERE ReportsTo IS NULL;",
        "generated_sql": "SELECT * FROM Employee WHERE ReportsTo IS NULL;"
    },
    {
        "index": 34,
        "question": "What is the total duration of all tracks in seconds?",
        "ground_truth": "SELECT SUM(Milliseconds) / 1000 as TotalSeconds FROM Track;",
        "generated_sql": "SELECT SUM(Milliseconds) AS TotalDuration FROM Track;"
    },
    {
        "index": 35,
        "question": "How many genres have more than 50 tracks?",
        "ground_truth": "SELECT COUNT(*) FROM (SELECT GenreId FROM Track GROUP BY GenreId HAVING COUNT(*) > 50);",
        "generated_sql": "SELECT COUNT(DISTINCT g.Name) FROM Genre g JOIN Track t ON g.GenreId = t.GenreId GROUP BY g.Name HAVING COUNT(DISTINCT t.TrackId) > 50;"
    },
    {
        "index": 36,
        "question": "List the customers who have made more than 3 invoices.",
        "ground_truth": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId HAVING COUNT(Invoice.InvoiceId) > 3;",
        "generated_sql": "SELECT c.CustomerId, c.FirstName, c.LastName, c.Email FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId GROUP BY c.CustomerId, c.FirstName, c.LastName, c.Email HAVING COUNT(i.InvoiceId) > 3;"
    },
    {
        "index": 37,
        "question": "Which tracks belong to playlists named 'Grunge'?",
        "ground_truth": "SELECT Track.Name FROM Track JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId JOIN Playlist ON PlaylistTrack.PlaylistId = Playlist.PlaylistId WHERE Playlist.Name = 'Grunge';",
        "generated_sql": "SELECT DISTINCT t.Name FROM Track t INNER JOIN PlaylistTrack pt ON t.TrackId = pt.TrackId INNER JOIN Playlist p ON pt.PlaylistId = p.PlaylistId WHERE p.Name = 'Grunge';"
    },
    {
        "index": 38,
        "question": "Show employees who are based in Canada.",
        "ground_truth": "SELECT FirstName, LastName FROM Employee WHERE Country = 'Canada';",
        "generated_sql": "SELECT * FROM Employee WHERE Country = 'Canada';"
    },
    {
        "index": 39,
        "question": "List all playlists and the number of tracks in each.",
        "ground_truth": "SELECT Playlist.Name, COUNT(PlaylistTrack.TrackId) as TrackCount FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.Name;",
        "generated_sql": "SELECT p.Name, COUNT(t.TrackId) FROM Playlist p JOIN PlaylistTrack pt ON p.PlaylistId = pt.PlaylistId JOIN Track t ON t.TrackId = pt.TrackId GROUP BY p.Name ORDER BY COUNT(t.TrackId) DESC"
    },
    {
        "index": 40,
        "question": "Which artist has the most albums?",
        "ground_truth": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.Name ORDER BY COUNT(Album.AlbumId) DESC LIMIT 1;",
        "generated_sql": "SELECT TOP 1 Artist.Name, COUNT(Album.AlbumId) AS AlbumCount FROM Artist INNER JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.Name ORDER BY AlbumCount DESC;"
    },
    {
        "index": 41,
        "question": "Find the most expensive track.",
        "ground_truth": "SELECT Name, UnitPrice FROM Track ORDER BY UnitPrice DESC LIMIT 1;",
        "generated_sql": "SELECT TOP 1 T.Name, T.UnitPrice FROM Track T ORDER BY T.UnitPrice DESC"
    },
    {
        "index": 42,
        "question": "What is the average price of a track?",
        "ground_truth": "SELECT AVG(UnitPrice) FROM Track;",
        "generated_sql": "SELECT AVG(UnitPrice) FROM Track"
    },
    {
        "index": 43,
        "question": "List invoices made in August 2011.",
        "ground_truth": "SELECT * FROM Invoice WHERE InvoiceDate LIKE '2011-08%';",
        "generated_sql": "SELECT * FROM Invoice WHERE InvoiceDate BETWEEN '2011-08-01' AND '2011-08-31';"
    },
    {
        "index": 44,
        "question": "Show all tracks that include 'love' in the name.",
        "ground_truth": "SELECT Name FROM Track WHERE Name LIKE '%love%';",
        "generated_sql": "SELECT * FROM Track WHERE Name LIKE '%love%'"
    },
    {
        "index": 45,
        "question": "How many customers are from each country?",
        "ground_truth": "SELECT Country, COUNT(*) FROM Customer GROUP BY Country;",
        "generated_sql": "SELECT Country, COUNT(*) AS NumberOfCustomers FROM Customer GROUP BY Country ORDER BY NumberOfCustomers DESC;"
    },
    {
        "index": 46,
        "question": "Find customers who live in both Paris and Berlin.",
        "ground_truth": "SELECT FirstName, LastName, City FROM Customer WHERE City IN ('Paris', 'Berlin');",
        "generated_sql": "SELECT DISTINCT c.CustomerId, c.FirstName, c.LastName, c.Company, c.Address, c.City, c.State, c.Country, c.PostalCode, c.Phone, c.Fax, c.Email, c.SupportRepId FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId JOIN Album a ON t.AlbumId = a.AlbumId JOIN Artist ar ON a.ArtistId = ar.ArtistId WHERE c.City = 'Paris' AND ar.Name = 'Berlin'"
    },
    {
        "index": 47,
        "question": "Which employees report to a manager named 'Steve'?",
        "ground_truth": "SELECT e.FirstName, e.LastName FROM Employee e JOIN Employee m ON e.ReportsTo = m.EmployeeId WHERE m.FirstName = 'Steve';",
        "generated_sql": "SELECT e.LastName, e.FirstName FROM Employee e JOIN Employee m ON e.ReportsTo = m.EmployeeId WHERE m.LastName = 'Steve'"
    },
    {
        "index": 48,
        "question": "Which customers have purchased tracks in the 'Jazz' genre?",
        "ground_truth": "SELECT DISTINCT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId WHERE Genre.Name = 'Jazz';",
        "generated_sql": "SELECT DISTINCT c.CustomerId, c.FirstName, c.LastName, c.Email FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId JOIN Genre g ON t.GenreId = g.GenreId WHERE g.Name = 'Jazz' ORDER BY c.LastName, c.FirstName;"
    },
    {
        "index": 49,
        "question": "Find the country with the highest number of customers.",
        "ground_truth": "SELECT Country FROM Customer GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1;",
        "generated_sql": "SELECT TOP 1 Country FROM Customer GROUP BY Country ORDER BY COUNT(CustomerId) DESC;"
    },
    {
        "index": 50,
        "question": "List the invoice dates with total amount over $30.",
        "ground_truth": "SELECT InvoiceDate FROM Invoice WHERE Total > 30;",
        "generated_sql": "SELECT InvoiceDate, Total FROM Invoice WHERE Total > 30 ORDER BY InvoiceDate"
    },
    {
        "index": 51,
        "question": "How many tracks are there in each media type?",
        "ground_truth": "SELECT MediaTypeId, COUNT(*) FROM Track GROUP BY MediaTypeId;",
        "generated_sql": "SELECT MediaType.Name, COUNT(Track.TrackId) AS TrackCount FROM MediaType INNER JOIN Track ON MediaType.MediaTypeId = Track.MediaTypeId GROUP BY MediaType.Name ORDER BY TrackCount DESC"
    },
    {
        "index": 52,
        "question": "Which genres have an average track length over 4 minutes?",
        "ground_truth": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.Name HAVING AVG(Track.Milliseconds) > 240000;",
        "generated_sql": "SELECT g.Name FROM Genre g JOIN Track t ON g.GenreId = t.GenreId JOIN Album a ON t.AlbumId = a.AlbumId JOIN InvoiceLine il ON t.TrackId = il.TrackId JOIN Invoice i ON il.InvoiceId = i.InvoiceId JOIN Customer c ON i.CustomerId = c.CustomerId WHERE AVG(t.Milliseconds) > 240000 GROUP BY g.Name"
    },
    {
        "index": 53,
        "question": "List the top 3 customers who spent the most money.",
        "ground_truth": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) as TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY TotalSpent DESC LIMIT 3;",
        "generated_sql": "SELECT TOP 3 c.CustomerId, c.FirstName, c.LastName, SUM(t.UnitPrice * t.Quantity) AS Total FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId GROUP BY c.CustomerId, c.FirstName, c.LastName ORDER BY Total DESC;"
    },
    {
        "index": 54,
        "question": "Which artists have more than 20 tracks in the database?",
        "ground_truth": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.Name HAVING COUNT(Track.TrackId) > 20;",
        "generated_sql": "SELECT a.Name FROM Artist a JOIN Track t ON a.ArtistId = t.ArtistId GROUP BY a.Name HAVING COUNT(t.TrackId) > 20;"
    },
    {
        "index": 55,
        "question": "What are the 10 most recently created invoices?",
        "ground_truth": "SELECT * FROM Invoice ORDER BY InvoiceDate DESC LIMIT 10;",
        "generated_sql": "SELECT TOP 10 * FROM Invoice ORDER BY InvoiceDate DESC"
    },
    {
        "index": 56,
        "question": "Find tracks with names that include the word 'baby'.",
        "ground_truth": "SELECT Name FROM Track WHERE Name LIKE '%baby%';",
        "generated_sql": "SELECT * FROM Track WHERE Name LIKE '%baby%';"
    },
    {
        "index": 57,
        "question": "Which employees are located in the USA?",
        "ground_truth": "SELECT FirstName, LastName FROM Employee WHERE Country = 'USA';",
        "generated_sql": "SELECT EmployeeId, LastName, FirstName, Title, ReportsTo, BirthDate, HireDate, Address, City, State, Country, PostalCode, Phone, Fax, Email FROM Employee WHERE Country = 'USA';"
    },
    {
        "index": 58,
        "question": "Find playlists that have less than 10 tracks.",
        "ground_truth": "SELECT Playlist.Name FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.Name HAVING COUNT(PlaylistTrack.TrackId) < 10;",
        "generated_sql": "SELECT * FROM Playlist WHERE (SELECT COUNT(*) FROM PlaylistTrack WHERE PlaylistTrack.PlaylistId = Playlist.PlaylistId) < 10;"
    },
    {
        "index": 59,
        "question": "Which albums have tracks with the highest average unit price?",
        "ground_truth": "SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY AVG(Track.UnitPrice) DESC LIMIT 5;",
        "generated_sql": "SELECT a.Title, AVG(t.UnitPrice) FROM Album a JOIN Track t ON a.AlbumId = t.AlbumId GROUP BY a.Title ORDER BY AVG(t.UnitPrice) DESC LIMIT 10;"
    },
    {
        "index": 60,
        "question": "Get the details of the longest invoice item.",
        "ground_truth": "SELECT * FROM InvoiceLine ORDER BY Quantity DESC LIMIT 1;",
        "generated_sql": "SELECT TOP 1 i.InvoiceId, i.InvoiceDate, t.Name, t.UnitPrice, t.Quantity FROM Invoice i JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId ORDER BY t.UnitPrice * t.Quantity DESC"
    },
    {
        "index": 61,
        "question": "List the tracks that are not in any playlist.",
        "ground_truth": "SELECT Name FROM Track WHERE TrackId NOT IN (SELECT TrackId FROM PlaylistTrack);",
        "generated_sql": "SELECT * FROM Track WHERE TrackId NOT IN (SELECT TrackId FROM PlaylistTrack)"
    },
    {
        "index": 62,
        "question": "Find customers who have more than one invoice from the same country.",
        "ground_truth": "SELECT CustomerId, COUNT(*) as InvoiceCount FROM Invoice GROUP BY CustomerId, BillingCountry HAVING InvoiceCount > 1;",
        "generated_sql": "SELECT c.CustomerId, c.FirstName, c.LastName, c.Country, COUNT(i.InvoiceId) AS InvoiceCount FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId JOIN Album a ON t.AlbumId = a.AlbumId JOIN Artist ar ON a.ArtistId = ar.ArtistId GROUP BY c.CustomerId, c.FirstName, c.LastName, c.Country HAVING COUNT(i.InvoiceId) > 1 ORDER BY c.Country, c.LastName, c.FirstName;"
    },
    {
        "index": 63,
        "question": "Which invoices were billed in cities starting with 'L'?",
        "ground_truth": "SELECT InvoiceId FROM Invoice WHERE BillingCity LIKE 'L%';",
        "generated_sql": "SELECT InvoiceId FROM Invoice WHERE BillingCity LIKE 'L%'"
    },
    {
        "index": 64,
        "question": "Which genres have more than 100 tracks?",
        "ground_truth": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId HAVING COUNT(*) > 100;",
        "generated_sql": "SELECT g.Name FROM Genre g JOIN Track t ON g.GenreId = t.GenreId GROUP BY g.Name HAVING COUNT(t.TrackId) > 100"
    },
    {
        "index": 65,
        "question": "Show the invoices with the lowest totals.",
        "ground_truth": "SELECT * FROM Invoice ORDER BY Total ASC LIMIT 5;",
        "generated_sql": "SELECT * FROM Invoice WHERE Total = (SELECT MIN(Total) FROM Invoice)"
    },
    {
        "index": 66,
        "question": "List employees along with their managers\u2019 names.",
        "ground_truth": "SELECT e.FirstName, e.LastName, m.FirstName as ManagerFirst, m.LastName as ManagerLast FROM Employee e LEFT JOIN Employee m ON e.ReportsTo = m.EmployeeId;",
        "generated_sql": "SELECT e.LastName, e.FirstName, e.ReportsTo, m.LastName AS ManagerLastName, m.FirstName AS ManagerFirstName FROM Employee e LEFT JOIN Employee m ON e.ReportsTo = m.EmployeeId ORDER BY e.LastName, e.FirstName;"
    },
    {
        "index": 67,
        "question": "Get all albums that contain the word 'Greatest'.",
        "ground_truth": "SELECT Title FROM Album WHERE Title LIKE '%Greatest%';",
        "generated_sql": "SELECT * FROM Album WHERE Title LIKE '%Greatest%';"
    },
    {
        "index": 68,
        "question": "Which customers have purchased from more than 2 different billing cities?",
        "ground_truth": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId HAVING COUNT(DISTINCT Invoice.BillingCity) > 2;",
        "generated_sql": "SELECT c.CustomerId, c.FirstName, c.LastName, c.Email, c.Company, c.Address, c.City, c.State, c.Country, c.PostalCode, c.Phone, c.Fax, c.SupportRepId, c.BillingAddress, c.BillingCity, c.BillingState, c.BillingCountry, c.BillingPostalCode FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId JOIN Album a ON t.AlbumId = a.AlbumId JOIN Artist ar ON a.ArtistId = ar.ArtistId WHERE c.BillingCity!= ar.Name GROUP BY c.CustomerId, c.FirstName, c.LastName, c.Email, c.Company, c.Address, c.City, c.State, c.Country, c.PostalCode, c.Phone, c.Fax, c.SupportRepId, c."
    },
    {
        "index": 69,
        "question": "Find the top 3 invoice totals and the customer names.",
        "ground_truth": "SELECT Customer.FirstName, Customer.LastName, Invoice.Total FROM Invoice JOIN Customer ON Invoice.CustomerId = Customer.CustomerId ORDER BY Invoice.Total DESC LIMIT 3;",
        "generated_sql": "SELECT TOP 3 Invoice.Total, Customer.FirstName, Customer.LastName FROM Invoice INNER JOIN Customer ON Invoice.CustomerId = Customer.CustomerId ORDER BY Invoice.Total DESC;"
    },
    {
        "index": 70,
        "question": "Which artists have albums but no tracks?",
        "ground_truth": "SELECT Artist.Name FROM Artist LEFT JOIN Album ON Artist.ArtistId = Album.ArtistId LEFT JOIN Track ON Album.AlbumId = Track.AlbumId WHERE Track.TrackId IS NULL;",
        "generated_sql": "SELECT a.Name FROM Artist a LEFT JOIN Album a2 ON a.ArtistId = a2.ArtistId LEFT JOIN Track t ON a2.AlbumId = t.AlbumId WHERE t.AlbumId IS NULL GROUP BY a.Name"
    },
    {
        "index": 71,
        "question": "Show total number of invoice items per billing country.",
        "ground_truth": "SELECT Invoice.BillingCountry, COUNT(InvoiceLine.InvoiceLineId) as ItemCount FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Invoice.BillingCountry;",
        "generated_sql": "SELECT COUNT(InvoiceLineId) AS 'Total Invoice Items', Country FROM InvoiceLine JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId JOIN Customer ON Invoice.CustomerId = Customer.CustomerId GROUP BY Country ORDER BY Country;"
    },
    {
        "index": 72,
        "question": "Which tracks appear in the most playlists?",
        "ground_truth": "SELECT Track.Name, COUNT(PlaylistTrack.PlaylistId) as PlaylistCount FROM Track JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId GROUP BY Track.Name ORDER BY PlaylistCount DESC LIMIT 5;",
        "generated_sql": "SELECT t.Name, COUNT(DISTINCT p.PlaylistId) AS PlaylistCount FROM Track t INNER JOIN PlaylistTrack pt ON t.TrackId = pt.TrackId INNER JOIN Playlist p ON pt.PlaylistId = p.PlaylistId GROUP BY t.Name ORDER BY PlaylistCount DESC"
    },
    {
        "index": 73,
        "question": "How many customers have the same phone number prefix?",
        "ground_truth": "SELECT SUBSTR(Phone, 1, 3) as Prefix, COUNT(*) FROM Customer GROUP BY Prefix HAVING COUNT(*) > 1;",
        "generated_sql": "SELECT COUNT(*) FROM Customer WHERE Phone LIKE '123%'"
    },
    {
        "index": 74,
        "question": "Get the total revenue by invoice month.",
        "ground_truth": "SELECT SUBSTR(InvoiceDate, 1, 7) as Month, SUM(Total) FROM Invoice GROUP BY Month ORDER BY Month;",
        "generated_sql": "SELECT EXTRACT(MONTH FROM InvoiceDate) AS Month, EXTRACT(YEAR FROM InvoiceDate) AS Year, SUM(Total) AS TotalRevenue FROM Invoice GROUP BY Month, Year ORDER BY Year, Month;"
    },
    {
        "index": 75,
        "question": "Find the customers with the same support rep.",
        "ground_truth": "SELECT SupportRepId, COUNT(*) as Count FROM Customer GROUP BY SupportRepId HAVING Count > 1;",
        "generated_sql": "SELECT c1.CustomerId, c1.FirstName, c1.LastName, c1.Email, c2.FirstName, c2.LastName, c2.Email FROM Customer c1 JOIN Customer c2 ON c1.SupportRepId = c2.SupportRepId WHERE c1.CustomerId!= c2.CustomerId"
    },
    {
        "index": 76,
        "question": "Which employees are responsible for customers from Germany?",
        "ground_truth": "SELECT DISTINCT e.FirstName, e.LastName FROM Employee e JOIN Customer c ON e.EmployeeId = c.SupportRepId WHERE c.Country = 'Germany';",
        "generated_sql": "SELECT e.LastName, e.FirstName FROM Employee e JOIN Customer c ON e.EmployeeId = c.SupportRepId JOIN Address a ON c.CustomerId = a.CustomerId WHERE a.Country = 'Germany'"
    },
    {
        "index": 77,
        "question": "What is the average number of tracks per playlist?",
        "ground_truth": "SELECT AVG(TrackCount) FROM (SELECT PlaylistId, COUNT(*) as TrackCount FROM PlaylistTrack GROUP BY PlaylistId);",
        "generated_sql": "SELECT AVG(COUNT(DISTINCT t.TrackId)) FROM Playlist p JOIN PlaylistTrack pt ON p.PlaylistId = pt.PlaylistId JOIN Track t ON t.TrackId = pt.TrackId GROUP BY p.PlaylistId"
    },
    {
        "index": 78,
        "question": "Find all invoices that include exactly 3 items.",
        "ground_truth": "SELECT InvoiceId FROM InvoiceLine GROUP BY InvoiceId HAVING COUNT(*) = 3;",
        "generated_sql": "SELECT * FROM Invoice WHERE InvoiceLineId = 3;"
    },
    {
        "index": 79,
        "question": "Which countries have more than 5 customers?",
        "ground_truth": "SELECT Country FROM Customer GROUP BY Country HAVING COUNT(*) > 5;",
        "generated_sql": "SELECT Country FROM Customer GROUP BY Country HAVING COUNT(Country) > 5;"
    },
    {
        "index": 80,
        "question": "Which customers have an invoice average above $25?",
        "ground_truth": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId HAVING AVG(Invoice.Total) > 25;",
        "generated_sql": "SELECT c.CustomerId, c.FirstName, c.LastName, c.Email, AVG(i.Total) AS Average FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId GROUP BY c.CustomerId, c.FirstName, c.LastName, c.Email HAVING AVG(i.Total) > 25;"
    },
    {
        "index": 81,
        "question": "Which tracks have more than 2 media types?",
        "ground_truth": "SELECT Track.Name FROM Track GROUP BY Track.Name HAVING COUNT(DISTINCT MediaTypeId) > 2;",
        "generated_sql": "SELECT t.Name FROM Track t JOIN MediaType mt ON t.MediaTypeId = mt.MediaTypeId GROUP BY t.Name HAVING COUNT(mt.MediaTypeId) > 2;"
    },
    {
        "index": 82,
        "question": "Find customers with first names that end in 'a'.",
        "ground_truth": "SELECT FirstName, LastName FROM Customer WHERE FirstName LIKE '%a';",
        "generated_sql": "SELECT FirstName FROM Customer WHERE FirstName LIKE '%a';"
    },
    {
        "index": 83,
        "question": "Which artists have albums with no associated tracks?",
        "ground_truth": "SELECT DISTINCT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId LEFT JOIN Track ON Album.AlbumId = Track.AlbumId WHERE Track.TrackId IS NULL;",
        "generated_sql": "SELECT a.Name FROM Artist a LEFT JOIN Album al ON a.ArtistId = al.ArtistId LEFT JOIN Track t ON al.AlbumId = t.AlbumId GROUP BY a.Name HAVING COUNT(t.TrackId) = 0;"
    },
    {
        "index": 84,
        "question": "Show tracks that were purchased more than 10 times.",
        "ground_truth": "SELECT Track.Name FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Track.TrackId HAVING COUNT(*) > 10;",
        "generated_sql": "SELECT t.Name FROM Track t JOIN InvoiceLine il ON t.TrackId = il.TrackId JOIN Invoice i ON il.InvoiceId = i.InvoiceId WHERE i.InvoiceDate > '2010-01-01' GROUP BY t.Name HAVING COUNT(t.Name) > 10 ORDER BY COUNT(t.Name) DESC;"
    },
    {
        "index": 85,
        "question": "Which invoices have more than $40 in total and less than 5 items?",
        "ground_truth": "SELECT Invoice.InvoiceId FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Invoice.InvoiceId HAVING SUM(Invoice.Total) > 40 AND COUNT(InvoiceLine.InvoiceLineId) < 5;",
        "generated_sql": "SELECT InvoiceId FROM Invoice WHERE Total > 40 AND (SELECT COUNT(*) FROM InvoiceLine WHERE InvoiceId = Invoice.InvoiceId) < 5;"
    },
    {
        "index": 86,
        "question": "Find the number of albums per artist.",
        "ground_truth": "SELECT Artist.Name, COUNT(Album.AlbumId) as AlbumCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;",
        "generated_sql": "SELECT a.ArtistId, COUNT(a.ArtistId) AS NumberOfAlbums FROM Album a GROUP BY a.ArtistId ORDER BY NumberOfAlbums DESC;"
    },
    {
        "index": 87,
        "question": "List all customers who purchased Jazz tracks and live in Canada.",
        "ground_truth": "SELECT DISTINCT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId WHERE Genre.Name = 'Jazz' AND Customer.Country = 'Canada';",
        "generated_sql": "SELECT c.CustomerId, c.FirstName, c.LastName, c.Email FROM Customer c JOIN Invoice i ON c.CustomerId = i.CustomerId JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN Track t ON il.TrackId = t.TrackId JOIN Genre g ON t.GenreId = g.GenreId JOIN MediaType mt ON t.MediaTypeId = mt.MediaTypeId WHERE g.Name = 'Jazz' AND mt.Name = 'Music' AND c.Country = 'Canada'"
    }
]