{"instruction": "Write an SQL query for the Chinook database.", "input": "What are the names of all albums by AC/DC?", "output": "SELECT Title FROM Album JOIN Artist ON Album.ArtistId = Artist.ArtistId WHERE Artist.Name = 'AC/DC';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which customers are from Brazil?", "output": "SELECT FirstName, LastName FROM Customer WHERE Country = 'Brazil';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "List the top 5 most purchased tracks.", "output": "SELECT Track.Name, COUNT(*) as Purchases FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Track.Name ORDER BY Purchases DESC LIMIT 5;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "How many invoices were created in the year 2012?", "output": "SELECT COUNT(*) FROM Invoice WHERE InvoiceDate LIKE '2012%';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which employees are sales agents?", "output": "SELECT FirstName, LastName FROM Employee WHERE Title = 'Sales Support Agent';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Show the total sales per country.", "output": "SELECT BillingCountry, SUM(Total) as TotalSales FROM Invoice GROUP BY BillingCountry ORDER BY TotalSales DESC;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "List all unique genres in the database.", "output": "SELECT DISTINCT Name FROM Genre;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Find the names and emails of customers who have made purchases over $20.", "output": "SELECT DISTINCT Customer.FirstName, Customer.LastName, Customer.Email FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId WHERE Invoice.Total > 20;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which employee reports to Andrew Adams?", "output": "SELECT FirstName, LastName FROM Employee WHERE ReportsTo = (SELECT EmployeeId FROM Employee WHERE FirstName = 'Andrew' AND LastName = 'Adams');"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "How many different cities are our customers from?", "output": "SELECT COUNT(DISTINCT City) FROM Customer;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which customer made the highest invoice total?", "output": "SELECT Customer.FirstName, Customer.LastName, MAX(Invoice.Total) FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Show the number of invoices per customer.", "output": "SELECT CustomerId, COUNT(*) as InvoiceCount FROM Invoice GROUP BY CustomerId;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "List employees who are managers.", "output": "SELECT FirstName, LastName FROM Employee WHERE Title LIKE '%Manager%';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which invoices were billed to customers in Canada?", "output": "SELECT InvoiceId, BillingCity FROM Invoice WHERE BillingCountry = 'Canada';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which customers live in cities that start with 'P'?", "output": "SELECT FirstName, LastName, City FROM Customer WHERE City LIKE 'P%';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "What is the total sales value for each billing city?", "output": "SELECT BillingCity, SUM(Total) FROM Invoice GROUP BY BillingCity;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Find the most common billing country.", "output": "SELECT BillingCountry, COUNT(*) as InvoiceCount FROM Invoice GROUP BY BillingCountry ORDER BY InvoiceCount DESC LIMIT 1;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Show the customers who have not made any purchases.", "output": "SELECT FirstName, LastName FROM Customer WHERE CustomerId NOT IN (SELECT CustomerId FROM Invoice);"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which tracks are longer than 5 minutes?", "output": "SELECT Name FROM Track WHERE Milliseconds > 300000;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "How many invoices have a total between $10 and $15?", "output": "SELECT COUNT(*) FROM Invoice WHERE Total BETWEEN 10 AND 15;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "List the email addresses of customers who live in Paris.", "output": "SELECT Email FROM Customer WHERE City = 'Paris';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Find all customers whose last name starts with 'S'.", "output": "SELECT FirstName, LastName FROM Customer WHERE LastName LIKE 'S%';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "List all albums with more than 10 tracks.", "output": "SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.Title HAVING COUNT(Track.TrackId) > 10;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Get the top 3 countries by number of customers.", "output": "SELECT Country, COUNT(*) as Count FROM Customer GROUP BY Country ORDER BY Count DESC LIMIT 3;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Show the artist names who have more than 5 albums.", "output": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.Name HAVING COUNT(Album.AlbumId) > 5;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "How many employees do we have per city?", "output": "SELECT City, COUNT(*) as EmployeeCount FROM Employee GROUP BY City;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which customers are from Germany and have a Gmail email address?", "output": "SELECT FirstName, LastName FROM Customer WHERE Country = 'Germany' AND Email LIKE '%@gmail.com';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "What are the names of all tracks in the 'Rock' genre?", "output": "SELECT Track.Name FROM Track JOIN Genre ON Track.GenreId = Genre.GenreId WHERE Genre.Name = 'Rock';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Find tracks that cost more than $0.99.", "output": "SELECT Name, UnitPrice FROM Track WHERE UnitPrice > 0.99;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "List the number of tracks per album.", "output": "SELECT AlbumId, COUNT(*) as TrackCount FROM Track GROUP BY AlbumId;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Show the customers who bought tracks composed by 'AC/DC'.", "output": "SELECT DISTINCT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Artist ON Album.ArtistId = Artist.ArtistId WHERE Artist.Name = 'AC/DC';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Get the average invoice total.", "output": "SELECT AVG(Total) FROM Invoice;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "What is the longest track in the database?", "output": "SELECT Name FROM Track ORDER BY Milliseconds DESC LIMIT 1;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "List all employees who do not report to anyone.", "output": "SELECT FirstName, LastName FROM Employee WHERE ReportsTo IS NULL;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "What is the total duration of all tracks in seconds?", "output": "SELECT SUM(Milliseconds) / 1000 as TotalSeconds FROM Track;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "How many genres have more than 50 tracks?", "output": "SELECT COUNT(*) FROM (SELECT GenreId FROM Track GROUP BY GenreId HAVING COUNT(*) > 50);"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "List the customers who have made more than 3 invoices.", "output": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId HAVING COUNT(Invoice.InvoiceId) > 3;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which tracks belong to playlists named 'Grunge'?", "output": "SELECT Track.Name FROM Track JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId JOIN Playlist ON PlaylistTrack.PlaylistId = Playlist.PlaylistId WHERE Playlist.Name = 'Grunge';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Show employees who are based in Canada.", "output": "SELECT FirstName, LastName FROM Employee WHERE Country = 'Canada';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "List all playlists and the number of tracks in each.", "output": "SELECT Playlist.Name, COUNT(PlaylistTrack.TrackId) as TrackCount FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.Name;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which artist has the most albums?", "output": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.Name ORDER BY COUNT(Album.AlbumId) DESC LIMIT 1;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Find the most expensive track.", "output": "SELECT Name, UnitPrice FROM Track ORDER BY UnitPrice DESC LIMIT 1;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "What is the average price of a track?", "output": "SELECT AVG(UnitPrice) FROM Track;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "List invoices made in August 2011.", "output": "SELECT * FROM Invoice WHERE InvoiceDate LIKE '2011-08%';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Show all tracks that include 'love' in the name.", "output": "SELECT Name FROM Track WHERE Name LIKE '%love%';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "How many customers are from each country?", "output": "SELECT Country, COUNT(*) FROM Customer GROUP BY Country;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Find customers who live in both Paris and Berlin.", "output": "SELECT FirstName, LastName, City FROM Customer WHERE City IN ('Paris', 'Berlin');"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which employees report to a manager named 'Steve'?", "output": "SELECT e.FirstName, e.LastName FROM Employee e JOIN Employee m ON e.ReportsTo = m.EmployeeId WHERE m.FirstName = 'Steve';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which customers have purchased tracks in the 'Jazz' genre?", "output": "SELECT DISTINCT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId WHERE Genre.Name = 'Jazz';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Find the country with the highest number of customers.", "output": "SELECT Country FROM Customer GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "List the invoice dates with total amount over $30.", "output": "SELECT InvoiceDate FROM Invoice WHERE Total > 30;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "How many tracks are there in each media type?", "output": "SELECT MediaTypeId, COUNT(*) FROM Track GROUP BY MediaTypeId;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which genres have an average track length over 4 minutes?", "output": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.Name HAVING AVG(Track.Milliseconds) > 240000;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "List the top 3 customers who spent the most money.", "output": "SELECT Customer.FirstName, Customer.LastName, SUM(Invoice.Total) as TotalSpent FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId ORDER BY TotalSpent DESC LIMIT 3;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which artists have more than 20 tracks in the database?", "output": "SELECT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Artist.Name HAVING COUNT(Track.TrackId) > 20;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "What are the 10 most recently created invoices?", "output": "SELECT * FROM Invoice ORDER BY InvoiceDate DESC LIMIT 10;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Find tracks with names that include the word 'baby'.", "output": "SELECT Name FROM Track WHERE Name LIKE '%baby%';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which employees are located in the USA?", "output": "SELECT FirstName, LastName FROM Employee WHERE Country = 'USA';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Find playlists that have less than 10 tracks.", "output": "SELECT Playlist.Name FROM Playlist JOIN PlaylistTrack ON Playlist.PlaylistId = PlaylistTrack.PlaylistId GROUP BY Playlist.Name HAVING COUNT(PlaylistTrack.TrackId) < 10;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which albums have tracks with the highest average unit price?", "output": "SELECT Album.Title FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId ORDER BY AVG(Track.UnitPrice) DESC LIMIT 5;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Get the details of the longest invoice item.", "output": "SELECT * FROM InvoiceLine ORDER BY Quantity DESC LIMIT 1;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "List the tracks that are not in any playlist.", "output": "SELECT Name FROM Track WHERE TrackId NOT IN (SELECT TrackId FROM PlaylistTrack);"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Find customers who have more than one invoice from the same country.", "output": "SELECT CustomerId, COUNT(*) as InvoiceCount FROM Invoice GROUP BY CustomerId, BillingCountry HAVING InvoiceCount > 1;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which invoices were billed in cities starting with 'L'?", "output": "SELECT InvoiceId FROM Invoice WHERE BillingCity LIKE 'L%';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which genres have more than 100 tracks?", "output": "SELECT Genre.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId GROUP BY Genre.GenreId HAVING COUNT(*) > 100;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Show the invoices with the lowest totals.", "output": "SELECT * FROM Invoice ORDER BY Total ASC LIMIT 5;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "List employees along with their managers\u2019 names.", "output": "SELECT e.FirstName, e.LastName, m.FirstName as ManagerFirst, m.LastName as ManagerLast FROM Employee e LEFT JOIN Employee m ON e.ReportsTo = m.EmployeeId;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Get all albums that contain the word 'Greatest'.", "output": "SELECT Title FROM Album WHERE Title LIKE '%Greatest%';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which customers have purchased from more than 2 different billing cities?", "output": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId HAVING COUNT(DISTINCT Invoice.BillingCity) > 2;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Find the top 3 invoice totals and the customer names.", "output": "SELECT Customer.FirstName, Customer.LastName, Invoice.Total FROM Invoice JOIN Customer ON Invoice.CustomerId = Customer.CustomerId ORDER BY Invoice.Total DESC LIMIT 3;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which artists have albums but no tracks?", "output": "SELECT Artist.Name FROM Artist LEFT JOIN Album ON Artist.ArtistId = Album.ArtistId LEFT JOIN Track ON Album.AlbumId = Track.AlbumId WHERE Track.TrackId IS NULL;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Show total number of invoice items per billing country.", "output": "SELECT Invoice.BillingCountry, COUNT(InvoiceLine.InvoiceLineId) as ItemCount FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Invoice.BillingCountry;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which tracks appear in the most playlists?", "output": "SELECT Track.Name, COUNT(PlaylistTrack.PlaylistId) as PlaylistCount FROM Track JOIN PlaylistTrack ON Track.TrackId = PlaylistTrack.TrackId GROUP BY Track.Name ORDER BY PlaylistCount DESC LIMIT 5;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "How many customers have the same phone number prefix?", "output": "SELECT SUBSTR(Phone, 1, 3) as Prefix, COUNT(*) FROM Customer GROUP BY Prefix HAVING COUNT(*) > 1;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Get the total revenue by invoice month.", "output": "SELECT SUBSTR(InvoiceDate, 1, 7) as Month, SUM(Total) FROM Invoice GROUP BY Month ORDER BY Month;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Find the customers with the same support rep.", "output": "SELECT SupportRepId, COUNT(*) as Count FROM Customer GROUP BY SupportRepId HAVING Count > 1;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which employees are responsible for customers from Germany?", "output": "SELECT DISTINCT e.FirstName, e.LastName FROM Employee e JOIN Customer c ON e.EmployeeId = c.SupportRepId WHERE c.Country = 'Germany';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "What is the average number of tracks per playlist?", "output": "SELECT AVG(TrackCount) FROM (SELECT PlaylistId, COUNT(*) as TrackCount FROM PlaylistTrack GROUP BY PlaylistId);"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Find all invoices that include exactly 3 items.", "output": "SELECT InvoiceId FROM InvoiceLine GROUP BY InvoiceId HAVING COUNT(*) = 3;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which countries have more than 5 customers?", "output": "SELECT Country FROM Customer GROUP BY Country HAVING COUNT(*) > 5;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which customers have an invoice average above $25?", "output": "SELECT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.CustomerId HAVING AVG(Invoice.Total) > 25;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which tracks have more than 2 media types?", "output": "SELECT Track.Name FROM Track GROUP BY Track.Name HAVING COUNT(DISTINCT MediaTypeId) > 2;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Find customers with first names that end in 'a'.", "output": "SELECT FirstName, LastName FROM Customer WHERE FirstName LIKE '%a';"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which artists have albums with no associated tracks?", "output": "SELECT DISTINCT Artist.Name FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId LEFT JOIN Track ON Album.AlbumId = Track.AlbumId WHERE Track.TrackId IS NULL;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Show tracks that were purchased more than 10 times.", "output": "SELECT Track.Name FROM InvoiceLine JOIN Track ON InvoiceLine.TrackId = Track.TrackId GROUP BY Track.TrackId HAVING COUNT(*) > 10;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Which invoices have more than $40 in total and less than 5 items?", "output": "SELECT Invoice.InvoiceId FROM Invoice JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId GROUP BY Invoice.InvoiceId HAVING SUM(Invoice.Total) > 40 AND COUNT(InvoiceLine.InvoiceLineId) < 5;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "Find the number of albums per artist.", "output": "SELECT Artist.Name, COUNT(Album.AlbumId) as AlbumCount FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Artist.ArtistId;"}
{"instruction": "Write an SQL query for the Chinook database.", "input": "List all customers who purchased Jazz tracks and live in Canada.", "output": "SELECT DISTINCT Customer.FirstName, Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId JOIN InvoiceLine ON Invoice.InvoiceId = InvoiceLine.InvoiceId JOIN Track ON InvoiceLine.TrackId = Track.TrackId JOIN Genre ON Track.GenreId = Genre.GenreId WHERE Genre.Name = 'Jazz' AND Customer.Country = 'Canada';"}
